2021-11-12 15:56:32,407 INFO  [Default Executor-thread-12][com.twca.twid.gw.GwWebAppInitializer] # initialize log4j2 = file:/usr/IBM/WebSphere/wlp/usr/servers/idgw/resources/security/TWCA/data/idgw/log4j2.xml
2021-11-12 15:56:33,672 INFO  [Default Executor-thread-12][com.twca.twid.gw.GwConfig] # system.property.twid.data.path = /usr/IBM/WebSphere/wlp/usr/servers/idgw/resources/security/TWCA/data
2021-11-12 15:56:33,673 INFO  [Default Executor-thread-12][com.twca.twid.gw.GwConfig] # basedir = /usr/IBM/WebSphere/wlp/usr/servers/idgw/resources/security/TWCA/data, exists = true
2021-11-12 15:56:33,674 INFO  [Default Executor-thread-12][com.twca.twid.gw.GwConfig] # load /idgw/setup.properties = /usr/IBM/WebSphere/wlp/usr/servers/idgw/resources/security/TWCA/data/idgw/setup.properties
2021-11-12 15:56:33,674 INFO  [Default Executor-thread-12][com.twca.twid.gw.GwConfig] # load /cert/setup.properties = /usr/IBM/WebSphere/wlp/usr/servers/idgw/resources/security/TWCA/data/cert/setup.properties
2021-11-12 15:56:33,768 INFO  [Default Executor-thread-12][com.twca.twid.gw.GwConfig] # contextPath = /idgw, GW.VERSION = 21.3.0.0
2021-11-12 15:56:33,816 INFO  [Default Executor-thread-12][com.twca.twid.gw.api.GwService] # module = rakuten_gw_1_10.138.101.51, account = 83794245-001, mode = uat, GwCrypto.Implementation.Vendor = twidgw
2021-11-12 15:56:33,856 INFO  [Default Executor-thread-12][com.twca.twid.gw.service.SignerService] # init pfx, prefix=83794245-01-TWID, path=/usr/IBM/WebSphere/wlp/usr/servers/idgw/resources/security/TWCA/data/cert/83794245-01-TWID.pfx
2021-11-12 15:56:33,856 DEBUG [Default Executor-thread-12][com.twca.twid.gw.service.SignerService] # pfx.path = /usr/IBM/WebSphere/wlp/usr/servers/idgw/resources/security/TWCA/data/cert/83794245-01-TWID.pfx, pfx.prefix = 83794245-01-TWID
2021-11-12 15:56:33,856 INFO  [Default Executor-thread-12][com.twca.twid.gw.service.SignerService] # dir = /usr/IBM/WebSphere/wlp/usr/servers/idgw/resources/security/TWCA/data/cert, prefix = 83794245-01-TWID
2021-11-12 15:56:33,859 INFO  [Default Executor-thread-12][com.twca.twid.gw.service.SignerService] # load pfx = 83794245-01-TWID.pfx
2021-11-12 15:56:33,911 INFO  [Default Executor-thread-12][com.twca.twid.gw.service.SignerService] # pfx.aliases = [ks]
2021-11-12 15:56:33,939 DEBUG [Default Executor-thread-12][com.twca.twid.gw.signer.P12Signer] # signer = 1600879917, 2022-10-07T23:59:59.000+0800, CN=83794245-01-TWID, OU=FXML, OU=70759028-TAIWAN-CA.COM Inc., OU=TWCA Test Information User CA, O=Finance, C=TW
2021-11-12 15:56:33,985 INFO  [Default Executor-thread-12][com.twca.twid.gw.service.SignerService] # reload cert.subject = CN=83794245-01-TWID, OU=FXML, OU=70759028-TAIWAN-CA.COM Inc., OU=TWCA Test Information User CA, O=Finance, C=TW, cert.nta = 2022-10-07T23:59:59.000+0800 / P10M25D
2021-11-12 15:56:34,164 INFO  [Default Executor-thread-12][com.twca.twid.gw.api.edda.EddaService] # als.edda.service is disabled
2021-11-12 15:56:34,217 INFO  [Default Executor-thread-12][com.twca.twid.gw.api.mid.MidService] # init midgw = 3.4.0.0, codePrefix = 364
2021-11-12 15:56:34,221 INFO  [Default Executor-thread-12][com.twca.twid.gw.api.mid.MidService] # baseurl = https://midtest.twca.com.tw/midServer/v1/, account = 83794245-001, nThreads = 20
2021-11-12 15:56:34,271 INFO  [Default Executor-thread-12][com.twca.twid.gw.api.va.VaService] # cloudss.service is disabled
2021-11-12 15:56:34,298 INFO  [Default Executor-thread-12][com.twca.twid.gw.api.kiosk.KioskService] # kiosk.service is disabled
2021-11-12 15:56:34,335 INFO  [Default Executor-thread-12][com.twca.twid.gw.api.post.PostService] # post.service is disabled
2021-11-12 15:56:34,403 INFO  [Default Executor-thread-12][com.twca.twid.gw.api.nexus.NexusService] # initNexus, nexusurl=https://testca256.twca.com.tw/NCWebRa3/, nexusca=EFCD839B3216B87DAE6D0D721A831AEA
2021-11-12 15:56:34,859 INFO  [Default Executor-thread-12][com.twca.twid.gw.api.otp.OtpService] # otp.service is disabled
2021-11-12 15:56:35,161 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/edda/v1/NCTxList.json], produces [application/json]}=com.twca.twid.gw.api.edda.HttpMethodController#nctxlist()
2021-11-12 15:56:35,162 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/edda/v1/ApplyTxWithCardC901.json], produces [application/json]}=com.twca.twid.gw.api.edda.D205Controller#d20506_901(D205SReq)
2021-11-12 15:56:35,162 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/postac/v1/validate.json], produces [application/json]}=com.twca.twid.gw.api.post.PostController#validate(PostPayloadCheckReq)
2021-11-12 15:56:35,162 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/edda/v1/ApplyTxWithCardCI691.json || /edda/v1/d205i691.json], produces [application/json]}=com.twca.twid.gw.api.edda.D205Controller#d20506_691(D205I691Req)
2021-11-12 15:56:35,163 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/mid/v1/auth.json], consumes [application/json], produces [application/json]}=com.twca.twid.gw.api.mid.AuthController#authjson(MidPayloadAuthReq)
2021-11-12 15:56:35,163 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/va/v1/verifySign.json], produces [application/json]}=com.twca.twid.gw.api.va.VaController#verifySign(String, String, VaReq)
2021-11-12 15:56:35,163 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/mid/v1/validate.json], produces [application/json]}=com.twca.twid.gw.api.mid.AuthController#validate(MidPayloadValidateReq)
2021-11-12 15:56:35,163 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/edda/v1/VerifyTxNonCardCAD.json], produces [application/json]}=com.twca.twid.gw.api.edda.D207Controller#d20708_919(D207Req)
2021-11-12 15:56:35,163 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/kiosk/v1/clause.json], produces [application/json]}=com.twca.twid.gw.api.kiosk.KioskController#clauseKiosk(MsgPayloadClauseReq)
2021-11-12 15:56:35,163 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/edda/v1/ReplyCode.json], produces [application/json]}=com.twca.twid.gw.api.edda.HttpMethodController#replycode()
2021-11-12 15:56:35,163 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/mid/v1/{accid}/sign.json], produces [application/json]}=com.twca.twid.gw.api.mid.SignController#accSign(String, MidPayloadSignReq)
2021-11-12 15:56:35,163 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/mid/v1/{accid}/validate.json], produces [application/json]}=com.twca.twid.gw.api.mid.AuthController#accValidate(String, MidPayloadValidateReq)
2021-11-12 15:56:35,163 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/mid/v1/clause.json], produces [application/json]}=com.twca.twid.gw.api.mid.QueryController#clause(MsgPayloadClauseReq)
2021-11-12 15:56:35,163 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/mid/v1/report.json], produces [application/json]}=com.twca.twid.gw.api.mid.AuthController#report(MidPayloadReportReq)
2021-11-12 15:56:35,163 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/edda/v1/TxList.json], produces [application/json]}=com.twca.twid.gw.api.edda.HttpMethodController#txlist(String)
2021-11-12 15:56:35,163 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/edda/v1/ApplyTxWithCardCAD.json], produces [application/json]}=com.twca.twid.gw.api.edda.D205Controller#d20506_cad(D205Req)
2021-11-12 15:56:35,164 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/postac/v1/card.json], produces [application/json]}=com.twca.twid.gw.api.post.PostController#card(PostPayloadCheckReq)
2021-11-12 15:56:35,164 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {GET [/version.json]}=com.twca.twid.gw.api.GwController#version()
2021-11-12 15:56:35,164 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: { [/swagger-resources/configuration/ui]}=springfox.documentation.swagger.web.ApiResourceController#uiConfiguration()
2021-11-12 15:56:35,164 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/postac/v1/clause.json], produces [application/json]}=com.twca.twid.gw.api.post.PostController#clausePost(MsgPayloadClauseReq)
2021-11-12 15:56:35,164 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/mid/v1/sign.json], consumes [application/json], produces [application/json]}=com.twca.twid.gw.api.mid.SignController#signjson(MidPayloadSignReq)
2021-11-12 15:56:35,164 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/postac/v1/postcheck.json], produces [application/json]}=com.twca.twid.gw.api.post.check.PostCheckController#postcheck(PostPayloadCheckReq)
2021-11-12 15:56:35,164 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/edda/v1/d205t919.json], produces [application/json]}=com.twca.twid.gw.api.edda.D205MidController#d20506t_919(D205TReq)
2021-11-12 15:56:35,164 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/kiosk/v1/qrcode.json], produces [application/json]}=com.twca.twid.gw.api.kiosk.KioskController#qrcode(KioskPayloadQrcodeReq)
2021-11-12 15:56:35,164 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/postac/v1/query.json], consumes [application/json], produces [application/json]}=com.twca.twid.gw.api.post.PostController#queryPostJson(PostPayloadQueryReq)
2021-11-12 15:56:35,164 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/edda/v1/ApplyTxWithCardC905.json], produces [application/json]}=com.twca.twid.gw.api.edda.D205Controller#d20506_905(D205SReq)
2021-11-12 15:56:35,164 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {GET [/initmsg.json]}=com.twca.twid.gw.api.GwController#initmsg()
2021-11-12 15:56:35,164 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/postac/v1/check.json], produces [application/json]}=com.twca.twid.gw.api.post.PostController#check(PostPayloadCheckReq)
2021-11-12 15:56:35,165 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/va/v1/verifyId.json], produces [application/json]}=com.twca.twid.gw.api.va.VaController#verifyId(String, String, VaReq)
2021-11-12 15:56:35,165 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/otp/v1/otp.json], produces [application/json]}=com.twca.twid.gw.api.otp.OtpController#otp(OtpPayloadReq)
2021-11-12 15:56:35,165 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/edda/v1/VerifyTxNonCardCI691.json || /edda/v1/d207i691.json], produces [application/json]}=com.twca.twid.gw.api.edda.D207Controller#d20708_691(D207I691Req)
2021-11-12 15:56:35,165 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/postac/v1/validate.json], consumes [application/json], produces [application/json]}=com.twca.twid.gw.api.post.PostController#validatejson(PostPayloadCheckReq)
2021-11-12 15:56:35,165 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/mid/v1/{accid}/report.json], produces [application/json]}=com.twca.twid.gw.api.mid.AuthController#accReport(String, MidPayloadReportReq)
2021-11-12 15:56:35,165 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/postac/v1/card.json], consumes [application/json], produces [application/json]}=com.twca.twid.gw.api.post.PostController#cardjson(PostPayloadCheckReq)
2021-11-12 15:56:35,165 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/edda/v1/d205t.json], produces [application/json]}=com.twca.twid.gw.api.edda.D205MidController#d20506t(String, String)
2021-11-12 15:56:35,165 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/edda/v1/d205t923.json], produces [application/json]}=com.twca.twid.gw.api.edda.D205MidController#d20506t_923(D205TReq)
2021-11-12 15:56:35,165 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/edda/v1/ApplyTxWithCardC923.json], produces [application/json]}=com.twca.twid.gw.api.edda.D205Controller#d20506_923(D205SReq)
2021-11-12 15:56:35,165 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/va/v1/verifyIs.json], produces [application/json]}=com.twca.twid.gw.api.va.VaController#verifyIs(String, String, String, String, VaReq)
2021-11-12 15:56:35,165 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: { [/swagger-resources]}=springfox.documentation.swagger.web.ApiResourceController#swaggerResources()
2021-11-12 15:56:35,165 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/edda/v1/ApplyTxWithCardC919.json || /edda/v1/d205s919.json], produces [application/json]}=com.twca.twid.gw.api.edda.D205Controller#d20506_919(D205SReq)
2021-11-12 15:56:35,166 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {GET [/listCodes.json]}=com.twca.twid.gw.api.GwController#listCodes()
2021-11-12 15:56:35,166 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/mid/v1/report.json], consumes [application/json], produces [application/json]}=com.twca.twid.gw.api.mid.AuthController#reportjson(MidPayloadReportReq)
2021-11-12 15:56:35,166 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/kiosk/v1/query.json], consumes [application/json], produces [application/json]}=com.twca.twid.gw.api.kiosk.KioskController#queryKioskJson(KioskPayloadQueryReq)
2021-11-12 15:56:35,166 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/mid/v1/{accid}/auth.json], produces [application/json]}=com.twca.twid.gw.api.mid.AuthController#accAuth(String, MidPayloadAuthReq)
2021-11-12 15:56:35,166 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/mid/v1/auth.json], produces [application/json]}=com.twca.twid.gw.api.mid.AuthController#auth(MidPayloadAuthReq)
2021-11-12 15:56:35,166 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/va/v1/verify.json], produces [application/json]}=com.twca.twid.gw.api.va.VaController#verify(String, String, String, String, VaReq)
2021-11-12 15:56:35,166 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/mid/v1/sign.json], produces [application/json]}=com.twca.twid.gw.api.mid.SignController#sign(MidPayloadSignReq)
2021-11-12 15:56:35,166 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/postac/v1/postquery.json], produces [application/json]}=com.twca.twid.gw.api.post.check.PostCheckController#postquery(PostPayloadQueryReq)
2021-11-12 15:56:35,166 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {GET [/syncCert.json]}=com.twca.twid.gw.api.nexus.CertController#syncCert()
2021-11-12 15:56:35,166 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/kiosk/v1/qrcode.json], consumes [application/json], produces [application/json]}=com.twca.twid.gw.api.kiosk.KioskController#qrcodeJson(KioskPayloadQrcodeReq)
2021-11-12 15:56:35,166 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/otp/v1/otp.json], consumes [application/json], produces [application/json]}=com.twca.twid.gw.api.otp.OtpController#otpjson(OtpPayloadReq)
2021-11-12 15:56:35,166 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/va/v1/verifyfile.json], produces [application/json]}=com.twca.twid.gw.api.va.VaController#verifyfile(MultipartFile, String, String, String, String, String, String, String, String)
2021-11-12 15:56:35,167 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/edda/v1/ApplyTxWithCardC9xx.json], produces [application/json]}=com.twca.twid.gw.api.edda.D205Controller#d20506_9xx(D205SReq)
2021-11-12 15:56:35,167 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: { [/swagger-resources/configuration/security]}=springfox.documentation.swagger.web.ApiResourceController#securityConfiguration()
2021-11-12 15:56:35,167 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/va/v1/verifySignature.json], produces [application/json]}=com.twca.twid.gw.api.va.VaController#verifySignature(String, VaReq)
2021-11-12 15:56:35,167 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/kiosk/v1/query.json], produces [application/json]}=com.twca.twid.gw.api.kiosk.KioskController#queryKiosk(KioskPayloadQueryReq)
2021-11-12 15:56:35,167 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/mid/v1/validate.json], consumes [application/json], produces [application/json]}=com.twca.twid.gw.api.mid.AuthController#validatejson(MidPayloadValidateReq)
2021-11-12 15:56:35,167 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/postac/v1/query.json], produces [application/json]}=com.twca.twid.gw.api.post.PostController#queryPost(PostPayloadQueryReq)
2021-11-12 15:56:35,167 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/mid/v1/{accid}/query.json], produces [application/json]}=com.twca.twid.gw.api.mid.QueryController#accQuery(String, String)
2021-11-12 15:56:35,167 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/edda/v1/un.json], produces [application/json]}=com.twca.twid.gw.api.edda.D205Controller#un(String)
2021-11-12 15:56:35,167 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/mid/v1/maintain.json], produces [application/json]}=com.twca.twid.gw.api.mid.QueryController#maintain()
2021-11-12 15:56:35,167 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/edda/v1/BGBankList.json], produces [application/json]}=com.twca.twid.gw.api.edda.HttpMethodController#bgbanklist()
2021-11-12 15:56:35,167 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/mid/v1/query.json], produces [application/json]}=com.twca.twid.gw.api.mid.QueryController#query(String)
2021-11-12 15:56:35,167 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/postac/v1/check.json], consumes [application/json], produces [application/json]}=com.twca.twid.gw.api.post.PostController#checkjson(PostPayloadCheckReq)
2021-11-12 15:56:35,168 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/va/v1/verifyCert.json], produces [application/json]}=com.twca.twid.gw.api.va.VaController#verifyCert(String, VaReq)
2021-11-12 15:56:35,168 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/syncCert.json]}=com.twca.twid.gw.api.nexus.CertController#syncCert(String)
2021-11-12 15:56:35,168 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/edda/v1/QryTxStatusC203.json || /edda/v1/d203.json], produces [application/json]}=com.twca.twid.gw.api.edda.D203Controller#d20304(D203Req)
2021-11-12 15:56:35,168 DEBUG [Default Executor-thread-12][com.twca.twid.gw.config.MvcConfig] # mapping: {POST [/edda/v1/ApplyTxWithCardC920.json], produces [application/json]}=com.twca.twid.gw.api.edda.D205Controller#d20506_920(D205SReq)
2021-11-12 15:56:36,930 WARN  [pool-3-thread-1][com.twca.twid.gw.api.ApiServiceBase] # mid, connect to https://midtest.twca.com.tw/midServer/v1/ fail, ex=javax.net.ssl.SSLHandshakeException: java.security.cert.CertificateException: PKIXCertPathBuilderImpl could not build a valid CertPath.
2021-11-12 15:56:36,938 DEBUG [pool-3-thread-1][com.twca.twid.gw.signer.P12Signer] # signer = 1600879917, 2022-10-07T23:59:59.000+0800, CN=83794245-01-TWID, OU=FXML, OU=70759028-TAIWAN-CA.COM Inc., OU=TWCA Test Information User CA, O=Finance, C=TW
2021-11-12 15:56:36,951 INFO  [pool-3-thread-1][com.twca.twid.gw.api.mid.MidService] # init midClient = com.twca.twid.gw.client.mid.MidClient@a6b80baa
2021-11-12 19:04:00,008 INFO  [pool-3-thread-1][com.twca.twid.gw.api.mid.MidService] #1 sync clause start, current = {}
2021-11-12 19:04:00,592 INFO  [pool-3-thread-1][com.twca.twid.mid.util.Tools] #1 add bc.provider = BouncyCastle Security Provider v1.69
2021-11-12 19:04:00,611 DEBUG [pool-3-thread-1][com.twca.twid.gw.api.mid.MidService] #1 sync clause req = {"mac":"sxvsggyFkfiE64O20MhnMyxcWrlOWtfqOx_3HKWBV_w","payload":"KoPQ9IZpgw8akw64aGw3IA","reqId":"8379424501","reqSeq":"0116367150400100010000","reqType":"file","sign":{"alg":"RS256","kid":"Az/LhZaQ4saOmXmKHU0zGqrm4uc=","sign":"CSA50uLhXJuCNVGLpYScJZf8kdJEiV7lzSamMzndv++G3NNjLQGD6nhaPSWHizRf1v4QnG0Kc4h9dsMV0vXyTHayXtrQeXNQZpn2R3i148JRuMIgTUYKXl9qJyNd3vn6MieajE7zLkTf7xMp+DxrPfMn5IcXMdsG52Cb8ly79a0CtTgqjlwcwXZ/cCer40CuRAhOj3wqEGXFPnnuXLQU+sJ8/B2JGbyJu9M3O9w0k/RpcRX8XsBmKIbveJe2TWVjuB7N0N8/8GHcNJ4kY/gs5SrBf9pZ769jubgMdAuDEZsa41/oJiFottTzELGmWDqY5t85DCr9g56Dym9xfUb7xA==","x5c":["MIIGBzCCA++gAwIBAgIEX2t9LTANBgkqhkiG9w0BAQsFADB0MQswCQYDVQQGEwJUVzEbMBkGA1UEChMSVEFJV0FOLUNBLkNPTSBJbmMuMSAwHgYDVQQLExdVc2VyIENBLUV2YWx1YXRpb24gT25seTEmMCQGA1UEAxMdVFdDQSBUZXN0IEluZm9ybWF0aW9uIFVzZXIgQ0EwHhcNMjExMDA3MDk1OTIxWhcNMjIxMDA3MTU1OTU5WjCBlzELMAkGA1UEBhMCVFcxEDAOBgNVBAoTB0ZpbmFuY2UxJjAkBgNVBAsTHVRXQ0EgVGVzdCBJbmZvcm1hdGlvbiBVc2VyIENBMSQwIgYDVQQLExs3MDc1OTAyOC1UQUlXQU4tQ0EuQ09NIEluYy4xDTALBgNVBAsTBEZYTUwxGTAXBgNVBAMTEDgzNzk0MjQ1LTAxLVRXSUQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCQX0uH9vjqTH4M1up3QTL6fGy4hmR1tDIL3NsHB1jRYQ/Zbz509wuDwZLyeCqsNP98g54ZXUkluRDHaiRW9QgXdp4osGeRomfYKD8QWq9Jt2Nh1UxCMKVlPsitew1x3Xe2YaZb+ekrOdw9A3xnrBS86cE/VTyDXfAnsHSA+LmSTZoj9KbFn8r6ktlzZcrSkS6Q9Xh8Ea1cR9bUr9VoUaN6JiSFg5ivdaiCE7TmAMZhWVkKX3m0LrBxGUBSiR8374ArnhdD/xpIwf5PxsMTaYviYpF8JAIp+0eXKBXVVYyJW8lWHu2gpqzIh15UQz9RiQu9A4Q3PaDXBN2F+e50TyINAgMBAAGjggF7MIIBdzArBgNVHSMEJDAigCAG16Cizh0+yC08pCfkOdS2qOp1xSEadFBpXaq+EH55ijApBgNVHQ4EIgQgFBhf2tOia21eUoDJT5czH257BGEAoNNiqDcYMnehZ+owUQYDVR0fBEowSDBGoESgQoZAaHR0cDovL2l0YXgudHdjYS5jb20udHcvdGVzdGNybC9UZXN0X3htbHVjYV9yZXZva2VfU2hhMl8yMDE3LmNybDANBgNVHREEBjAEgQJAQDA/BggrBgEFBQcBAQQzMDEwLwYIKwYBBQUHMAGGI2h0dHA6Ly9PQ1NQX0V2YWwuVGFpY2EuY29tLnR3OjgwMDEvMF8GA1UdIARYMFYwVAYHYIEeAwEIBTBJMCMGCCsGAQUFBwIBFhdodHRwOi8vd3d3LnR3Y2EuY29tLnR3LzAiBggrBgEFBQcCAjAWGhRSZXN0cmljdGlvbiA9Mi4xLjEuMTAJBgNVHRMEAjAAMA4GA1UdDwEB/wQEAwIGwDANBgkqhkiG9w0BAQsFAAOCAgEAbiRuvE4IItVh6oAl4Dv5bLFsm5tRnP77Vwq9TtDEW3wCMCOcV7IRgsHKJvEyizvZtTnlxkqSeXa3ez+zT3yY7uKzUhcb08D2uHxE8drQkzc9N55g/LEkFmdpREW1Slva9UQnSHi/GJoGwcrMtsu695gBmg7Of4Kyc3/OdRzQgNqOgY/DyuBpPJ/FZYXpXyAWt0B6yrb3D4jpKo/I9XVbpI6+4O2Nc8UYAby9HBEx8jGMIoSvfq/cTsgjZOaH1zcgvB3vBPSSPrW5xv2Qjo4eo8PCBWnYU0rbSOC3kBqaof9BPwphALH9Cjb3uJwe7OW6ZNiMT0MAQrA7jxdc4N0AevGKlYIkgngnOlGL1z9OPqbbwWF33YbUjr72j8WZ2F6W+7Ze9Db7NhCh9XP89VL7Zzoj+NU/VCmxKfGGyvoDTstILrWt/LLhMgfMq5IuubNvIkX/vUOydChrNpmU4m2GoWPvGu+mXXaNpJ14v4ynI/Ps5FWiTSPS3GZtEROyGaffQUKY9pQI2Uk/nzFKa13v4MoKzLXdf7LL2L424HXdAbxYfUlOkgDVW8qXFoFiWjty/qLrIMlvj2GujlLiCgBOyJDvZUm1m6XiSqAAzNnFOZUS2tDUoxIOtu1Qr0Kk9gRuUFlDtoBiA7xQfqb2QYlN30mTcrJ3FUIoQbAEsE11UwA="]},"tinf":null,"ver":"1.0"}
2021-11-12 19:04:00,621 INFO  [pool-3-thread-1][com.twca.twid.gw.client.mid.MidClient] #1 post to https://midtest.twca.com.tw/midServer/v1/file.json, reqId=8379424501, reqSeq=0116367150400100010000, reqType=file
2021-11-12 19:04:01,361 INFO  [pool-4-thread-1][com.twca.twid.gw.client.mid.MidClient] # reqSeq = 0116367150400100010000, wait = 4, cost = 735
2021-11-12 19:04:01,362 INFO  [pool-3-thread-1][com.twca.twid.gw.client.mid.MidClient] #1 recv resp.headers[x-twid-rspseq] = 1513005
2021-11-12 19:04:01,363 DEBUG [pool-3-thread-1][com.twca.twid.gw.api.mid.MidService] #1 sync clause rsp = {"ver":"1.0","response":{"code":"0000","message":"{clause_en-US=1100721, clause_zh-Hant=1100721}","payload":"dLgrHsdNY4upKAraZli5PtnvdBvlrWa3wXBiPfx/qRGQmEAuZHE7WNdKdqvoMaoOwVp9NmHpnVu3k731oZq4PWARIRxx0Y2XBqXI4Mx9seYcZGHiebz7QvNPoiYGs0mB/TOaw5hzxv0Q6TKqg4Qm4LghQ1G4INinl4uQDG5clqSt256sNfuSHHx7cOvexkCGzr73x4SPY4Cqto7Md85CfqbOsS+ohSvrbdXnr2Gikkm5y9jWKcUA37WbuqzocSPSHyfJ0iQTzE9LdcXYIC17MAkKq7U+nnvxPy0Kkz4xFmHXfS3zRSQ5hyrVl6Iy7YP/OGEQGNRsBZMh9IydiXaoBoYe2N7lBg6hOzY1tvPRbh0LkRuAi2HzBVRJatUffNkuB1GRVcqXO4u8bHI6rrBNTszavtME7h+fy0rrCv7X0dlmUqeboRxKQpfu7TDgpId4Yr1ZNwATHOVmAvuPgU8yxwAwdwMcqKjSk9klaRdkX1UJe1h72cuISmszrNgcogu1I7uHg1sfDfN5J8KnSr2jTft2L0XPDnnKGv+NdpzTESwX/whFGoOQqMGIp8C1erz72GzbI6yz5o1HVhx+tRxofom0cC/IYK/q7voI9NTiUNnuHTAnl4P2muGavuDC0xQzQdYMV9ri7NrStIVTFKOujBnNW/rqYU5v2U7ujWdb2tC3aio07waprt6xKHCu5KZKbfC6fslKh6DQOWKuwYehHrgO76zXWN3lkVtiPiqrcIlPqoMGbZmZHP6xkgu6dor6bwketyRV4fwbrJ98IgUpQvUwoXS5dYsweVYvUGMl00bh8I0euoIJALrrX19ZmQyT5tpxb63pJ9kFNfXsyO6TMgDqA6rSITPwtZTemLQJwAE3cPYUo4QRerDSh61lerhXxoNvhvGwQ9sXIbAZMUw+zuc3mHtUGu/PILoLmmyAvJbcNCJBx+/S/IijO+T8J55l5ExIRZbz8Yh3S+RtGlWmm+wuO/szXi3vyFYWPwGtH5LDrhRFEsw3NHAU53hBlib75TYB8Wth0pwmbFmVz7ftChZ2MHkX43THEivNPZmCs1tEAKE7lT8XV2CDWI1W/mmayLrzkKPJ5GIkbXHsNhIA7VDTZCQ5UKYlLhe2nxPXwawzF5OuqIrZYj83vPyD1s9UsvOvAdUMi9FTNYaANAydU9qHcOggyccK3Vcf8qmh/WauherwRYtgTrYJIkdgmrhBMDJ7J7zbgZOPWWTJyIrLUe9IEFTBc6gJ+kFQHmPISwv/q9CH7Sd1/SC8qfFeKO1jw1I0kpsxJLmUZzjC5eX3u1dgEIyrLyqfcA8FrwSwknOTTj0MT3jSrB5WzeBZGBb6BKI2cj6S8NZ4RvSWV4DfUgyAb3pNw1Q5GENehJLK8D4lTKKSFCm9+Y9YDLQqVMuYylDi+bhvblmVMMEGfk1DiR/fiyAyadijOK3g0yzpEkwGB/S5zb0LrPbnmyGO7NbzVQd0v8GejKrM8AVPqC3G0nKh6/2t2WdYH9MDp7JzBDGqZKnmp0QT8aK9YmrnIvaErs/vMLg+a3lxNWgi/BodISbzlKjCwx+/XeHIuGvts2T6grsWGpkfZnIwzy7vb6EQUzbA/FoupotRRKQvCgGboEMRLIF2XNFKN8FykqOYt/lqDvYaGBeLvK/CKymVx7yLkI8Z4uWDvw8uKtaPA3llMf509/u88vWDY6k9urP3CLo5Kyiabp5rfaK9B5JleJS9zsIM9gIDcspiSChcspr+MmwjiJl3UdMeKKn64I9ybtn8httxmn7U1R5e0NInfloycbv0lFKfoHSSRCagoUzWWG4U30OFdMmtA4IUb/2UHZTU9lP/Xv1VFixmkeAZ/0HHl9u0FozW4zVV3jS/iXIATeER0wzg9aZNtdZKQ93jdul+WeNZdu1Zr/Ynv1RpT1ovhifxv1ILi3tNV9F6qt9JdTewhknr+i32HRVecFmAzKzHiDAH5mBX8MadIhcnWFEpyRC4CMlkiG/jYMyVUjpgJGZnq2ruvrl001RP6CXgdj/lCDumfTVuvmrcxCt0BYUZy3UHYbrgdMTRMIL9GzQs7/L6PquuXYVpBD5DFh8XVOyoXr0DbtsQKIZR8GaEOIlSsrwc3sl4Oc3EZkJmX9ckU7tJ4AXWWdeEhL+18m5VPol82cMN2VwGYtPqhbgXxBA2d8w7SHSONqeIcsiClM5iH2xj1iC7qs6uFc7ojcLDneoXOW9MDnRON3fRUEJuJyH+0PSQkrMLABIi5nz45I99u+4N71jzlz2FDVywcUKSmUE0FvqZoPbOXZxsmPwr7jtXEXOlzh2Vqma/ggAEB2+w9yWPR9cTGODaQUQ0L+B5FL8RvFN0X3Euvo4IGqEhz9NmK5IP9s/iGkSUbmAjzWYq0Gf1cwz0F7Rsf0dfL95TRZ0Ox4UU5nzTpMw6uslNzsjc8wKUyzYJkcbGyl3ErolJB7Kf6cEUST0SB3KFJmUBSJSZ1i1Ztrrv8fvc4p95nH/vAIK9HMeq6/rLjAsazlMqaiQ1hFjG8TPGKWDxOUhpfXAIVFexOcNZSU/7qDc8MMHLnp5Vp3hbMr21x8mDsFQJXcfiJeijNchu69kKtvmxjWOlXeu1WPPEuLLMZ6kldMj9Mzv1b1XW7+xIfru/rpxi0T2Hg6n4vATDhX46K757YDVFNMP0oiZHH31fUEthrCVZMSbv5YX9/15eCXuCTAKgwym5E9RfI3QRqFi+0/HA+DPP9s0+Qx6EAk/cnfRNG2wO0YjENBM/xvCmMd8uKgRTLz5OsGZL5x08iqPX9PFKaQr3LKmJsWB48hy3jdlWS+CjYu3glH+OX05iA4i6V0vJbRl4Qe16y2+L2643PYbberKLDPHtqeE1NKnwdxPXCkaaYOxogHXTdTc3k9sQJ5OiyqWL4SsUGODO/Yk37G2KKA3cP3FKYQCcvvJVgmcX9ZkDjwF1m8QJgiJcmikbuwj4UNeUF9Z0Rjy1wHJ7iHc4Fp79MeAuLm4KGOZ74+NTp2oH2Gee3Gax8mVN8ooCzVFePyB8O5twDA7vjnNYC96AVSg/2V5nav+Lb+RjErDiol39LFMmZZNFUdRbByRl52ATkvHjtbQgNQ9UzI1FgoLdmP42YfUyha9pexjpoXah9z/7RVuDn90w12LU8vWlwE5xxXvlTY8y0IqD4nK0+iyDr5cbqgv2EJ6R52AvRNfhLSo2Zxp/032Z179+HEnya77fxSf6uxWusZ+NjlCQEdB8hKHxg5LBmq4B53bhewSIiw4GqTzklp2phcgTZ7+yxookgwT1QBgaHHp+H3e0U5MvQxktWQm26cw6SfLrC/7OEH65YkXctXOSbezRQlv2AIBXrA+/efIHBpo0jow4H895CJJcf1VDZlGjlc/fdnr+HzboUS4yrZklEKvE0awou5o8jVxSrnRFdXVX4Df3U6TXi9VWauFu9RgkQitWRMrTh/SaAcFJ6Y0NI+MaZ1RWHPq5MFCuJY8aylzibysiCZGvERzS8cd4xXEJ/GllMjoCC7v/vNhnTjSDeSfuabAAXiCkVWxODG88KlTtoEFvWEfVUHUpZtbLn42vDtzEFkvdFbXUpIJGvPpykXhnj78uu+YGVKmb6yTQKqh3fc60wcHbt4NuVgbMMIy21j88Q4SF9EROjgloyDZOGbXHquCkL/Ul1/aUN8RkYWJuyUGwiZ05FguvkTOJaIm7DlPlE6CLNvIphOrLHcT2T3hoPL/1tNL4NWABF3UNV2RvJxaq5jhjooICZ7/p2vyMU3wcH1+fGiUUNUdvmKHDIOo9gUCtw3Ta95Cunyd4Y98+91rtfHBK6hBtrSnDO4/q1t99yxS021iNSWNYthKf4G5PuBflfIwvhO/65CXpVaGglcoNjjW5X2MNoj6CzlebT3zms7gPxIqAIiL/bVEGzFZBphK0DmxotcHHNwgnyZX1IAMggtxazAys1OsnZVbuzN9HBUh8BO2+1xlUPvSKVf/PEWjKwJast6qfYLVwwnJGjr+a4RIO19r47xzyc2ijWfrntn/BACrSAYv4fUE3uwOgUhJWhJwnd2JBt7YRYnXFXDsL8bVM97kNbcdNFzDCpP7WR8rt5ynStBycR0k2poOQ1VKT4MCA1Fkj4Wx+JtnUb9lxiVOGLT7g7cqEDqUJ3lhsQ1QVjKyvMV6Y53vYEmFWvezOzr+yT2s1TPysurWVnIX8yhRTfp/4/IZFWWPImNww0fsTrOnDrpmsh0fwMCMrUzi79xnmQ4EZLQHCqpDg5y1VzeKg6mFlNFA8ki4YBXYzNUrt081C+k1oMrFTraUHazJDWDvD1ChjsaUnO6WC3K3dmpilXMz/GUVxWn1DY75gT8rGAKs2Dnu+k2uB0Qt/72bwOvxX4oBE7kfQUwlbv8qnZl2z9ZylUMZWX/GAVf+a/IY4n7kQKjB7u2Ly6eCspMAtVllJgQBt1NcGwVjh05uCfYm7EXfVXX1Clp/t+oQvp2NxjO7AbyYx9mGmtml5SMchfKQET8oqlZNojbOmnvbE+mS1MZ20sgz6GsHdnb8pvanRra51TfNWQRep5tFjB+sh23ID+Y78VWQBuUdfyNWNjCl2BHq2Sne0DoCi5c2WlKmN7vRG1eV5gUW4ah++L6izjs13V/3bJFijdqit0DqyFcy0Ot3TtZ9EG/H3UrEpwj+z9PiPacr05XUv6Dv6Nd0E+YgQJk4KgqdDTMyP8vxPlblwT4ybC7qh7UYioWgoqFamwnaxXt58txjxAkvb9TlIZ2EW+sk65hn31tLkX6TfZzmNiZh2OQmzbDMYeuVlA9RLDdCRcJa7Pi5ZnUGyD+DAKt17DcrEZEL/UWNwG1xmADWmQsP7Y/+Lh4Ig2czeo3ld47dAW+YtGp3CeYk5LAQ4cYcRA54FWa9EQAEy41jX7YQ5m1+jF8Ne/dVaUC8L/UJl+MzTMMb5zIonG6dd3llbQyEeV7R4hZXWqPzS9RgQkvhlIe4fH3WfrNfvtm2scgI73fACNrNifi85amnUfeFbhMcYU+3cAgR5PPVWVM15V/mQGpbSD4rEBaZYiginhvPhdw0cyzkYjD3yfCoDrqjOgkbOjNZARrHCN8TQUCEq+cJBRK0M6XeI4aR3eJQbw+AUi0hh2dDDxxZ79qiHmKj4YuC2TYJSJRE4H/VPib6PT2yutGqaQ6bBFveNCFMWwADFv/erFYH+6dfsr1fhl1xWUUUa2UsdTgpnEiNWi5jzgGgkiUSkxV05QguTj6qT/Czyv13E1tndEliPtps2rRGuahmeAJaaUP8gpLpABqOJBnnDnilucQaVm6snRqj04W4n85ZZUXfnimRp+uhqqIVfmosfib6sQt2SBeddTr/oP9ozH0Pdm97mHhzPz3fdILcLCnG9kmOQZ4f3Nd/5cNlthppXkMgZZ5qZ+vV04BtxiRHFVxJqe+aQxZf6i89AELzosCCGieuTZ2wEmT59EbYVpqxMSndcZmwg4SOKMyR9StmcvVKNVe0b9UcNoXWowvPyQL8X1H+c68o9WJFIOjJoTsnEGzJBUFKbseSGTueiGFGJsZP6BfF+K5GVvuMwTzmbkypwd2xqGmSezU7itzEXgirqcUNB8WO22XNsfjQy2y4kPbT+xgNjTEqmsiqVDWehiS6E6MVFaCBtqbZQBSfsdIOZgvYA1i9UxUbuFH9S4itxr8YULr8hsg0XAI39gUasUKOl/UwmVXQ3m2uotfajbVUj/yI40aVxjkcXagzLaqz2uuXJ4LCS+G5aPuMFaq0EDTumDwJvMvq895UT0pcmyr9VSvYIT4Thmf1ulgqUlmYI3XPrJgyi7gma18zF8cv3PY0erIQaD7sYYfk/kssvZWq0f95Q1kHS72pw23Nh1tzXxln2o/hUe5axJb8F9MV+S6g/WDyRwJSKAgMTPlqDPa6zAKzpR7sjeSWJQRqVC+M1UDzfRWa3nYlHJP6X0U62A+H3ihVvMm7s+fHe1Ntfu5olZxVyQrv0VLN6b6pIyYAlcDrm84HhBUTqvuNn/gxXWil0FZbpgbNFvyIL1PUyMsbx0+7px/ArhgvLmaU74JT/98ozgoWVBjFKb5MEZP3bTz6zNjfFUARyrLa+rbY7JrQycQxgdMmnh/AnTdF+p2DH3DvJAPPVgCI19H4Nj8BD/D6creTlhnmSzlc7UQcpaSOB344WJ8RLC4gj7iWKuRHt/l2JbJAsqCfJVmgKnSy68NrwIUf+3zL0Nh/4lc6RrmDVjiNFBwRCOWn5sv4ChFM6dqxeM0losAOYicbJTcrvKLwJ4FdSXwVMbzjqJEqbPSzx4zVy3fgu9Azkuyt+Ayd1IThpuQ8fIzbFur3Afu9WsKOolPFO6rtl9E6aSMHDy8LDK17gD36tTUoSoOEhL/m4LPPQwAEMT4AOl6At5d4bKkj4NTIJEw6eRl8CtwDdAlRH0XJS/DnUiS59CdEJTf0/r+r5pwVDieBZmtOs576Tz0tRyzjBj51HTVL85XvF/LdYa8AQhZcTpXxWYM2SsHEk64Lhd5C8JVXwjknkyvEwmLj8ZtTITY0bkF+lzSyWgI/EGEp83Z63tvKDgOVH5KPg3uOkm404WFcqfx7wIKsiLv8rDyFwJYQePiFKtS0NfttMABffekaXpnQgD/GWelOpgkXVpcvFOc8L4ZCtPre7XG9ruiqq5VfWfWeWZXlIXkp+pMeiBu7Nu/keA5xUcDvwQn09Xz9MLKRMNjWRudVwLtKu2+3RVUszi20n8lMviLJoj2PWygb0DleWB7J+QGEl3T9MS7x+Zt/w/5eFU31t+kh0Ei4eMuoMxiEhXbKwPFOv1mdzOpM/TOpZuRU0rPfs28fZkvTf7dcWGwuY2WBv1NTsNXp8o1shbB3ATUTkvs2MmVsCOTdz9w0SDMpsT+tXge1YPfYBeHWByk9vfAi6vbcGiCcLz7MoMtzucX5S1Tp8Dbp8qw2NvzkuzQY5eysheiGtLAF3Mcx9gVvPV3WwLgTFJi2Vh+YB6GKwKBfUB7qWtX+C2x8kPPJhr3eTcuftWoZPCMa6ymX6uxTLjEm1fmxuKpepBql0UpdCWVJOR5Yhxu6SPHtl/9R72JDbC2AIZ2P5jnfzgEaMigSFF0f4FfdKKCHy6dxlHNBuvClw5AgEuj/gvav2jCNUZklJ0q/fuMgoSnJaPe8G4QteWHeZ7nCZsDwsOjDwV+a8KbWMUeq1u1KZSuufUvruY+3a/pXTleuLNUUCCqqbUcBYmi5y0Kh+pQ9E9icVEWFveYwBqo8Fzf4KU/iX4TktQpuQ5XfCcUfBZiEHUKVLWl2+VyEfCCJwW+e7CrAVevE3Sqyh360W7lmNtNBipTR+o6fQxHsoxF+ODuf5jjVgE/OQtl/wgkCrjgzvXUzvN3wr7uyL4kVF9qdjFYL25HoYyAI5MF7KsLDRz7jI8ObYr4BUn5AFEdQv9YmN09SEbgVt/7P9MlSxMosiqQh7qIQdafwB8i1fthe4u1rDe2tu5oGAMFZ36h9PWqhGmgJSE/9qZ19uOqJOyr/k10wDFdesqB6utN1Hhw4K/L9bUZz0OPHfRbaO9AyyqSCjvEQAcHn5X36AWLRodGtSR13aSXJf7xkCERzgVmdKwP5wEch2/AkrJAY/q7dZ3Yy50XgI0L/RObZvTTs0M88vDr/rouuz+9TIXFGQwrR8m6rqCA2FGbTO7H2z7PczebHfFqLXqBPRR52qdujIEfAfIExEEzDtwUJv8H6cuHtMGJUfohMgM3UYShbklH4yJ0eYaeKy61bAdU+e9kLzJ2jb5EMprqGWzbChsJ1yzKbOhT9ZWlFQlsG/75HmpTB/Iz7WvrwRNFc0zwufHCYhm5gxDhf1II00e1PhmQw6wQGgJiL53xZzO0+fjXR9qf2CIDqcFZ5mPVU9V/9+iS7GNyAybA5NgcH5zxbx9nxIaYwdTluq6pDyizPs7DFQioKQyOy3LnqUF28pyvwmZVOM0QoCB2bHhFfw4Qw9tSBT2WFp3esthzYnCePn6ybqlGkFiNu42PBcfX6MEi6xRxS0DZNMYIH7M1RmPSH82xP6QhReJwx3GYNn5HcFv32/xE4yWe9SoWHX3HvPUVyR3EYzHGDBRK1NXBqCFnjPzi1tFaBbbaGX+PUTM3CbE826qEkPcSrHVxl666gbBW9JSIAGqUzsGD4+RNC9O41fU4V0NtT6bMeaXVPm2IPPvZmzCkaLsxPepJqRaMGEqOLxkXNFEafxeP1+qCK6cUMhg6pKNgttWkXILjbVRp0DAiPTTqFNx+tbd5ZicHqo+/f0oknKL3RFcTcXSWcnibofScO4WFMLi8O0RL608i9otdPnWCo08+TCefU7UzhmhPYZjs1bBGy7QQmVsMANt5pZ4TYPhSmFUsUTFPRFcayJJH787wPJLngM1jNgYUb4notkHwcKVYtmMlidj8XPVxwTwPmp0mjud4Qq2BXNuBGmUR89TTacbGMtgX0lRIBzLf2BSGgMavD6tkIs9LJ5vn6u21p3CTijkJaF6VGiTk3r1f02uhSvP7vnnfT6UT+RS7m1PpHX6PWrpiICngQc4rXwAkq4rxWvppkAaR/AGniZ8WEVeIQiNOGNwqzvJHW4qNDv36cO5DVfMzQsP77TcXBvRAKZsW3gVq/FMRuWq0/nk5nyG28IG/f7u59PNruox1BhkgGnZYxkTP2FV/u8B8ME/il0f5LkIsvSjQYTy6y3p0BdrJmrse/IOdJZUTXBk3H5hiNJY3b7g64bQyhEOlmsNyAKNP3q2GRitPtAS6lZL+s/VX3HccuI4apIXsBX7PK+qNxS7lz2p9XSQIUOjVHLiDldMWoJxKNbFnsYeuCncHWFu6oFhiD3NrLKqhiIDwx2P1EBLzyY4smGmGDDj3jIYdU5REohyCmsIwOnQhCq24Micw2tOOXcdaayU3tnTJMMQBMVDMYj2H8L3gmGXygkanoGiOKsp0sAGxVtX2Q7BnjGs/cASnGJL9aE8q2i+evEuy1MLwjjdV5hC2UXW/YWzbnfcgomS6mPef1nwYb9M1eMX4xR/BGt0mTs4f3HPWqgQsaqRhwCtrFtXc5dEFN6VMxjCj09t9V0LC2Ize+7cqafcFJy4iKYwV1g/dVpuEwPdH4GM12PgOnzaqoKzBy6Hisvh+izcPrkFPs9mH8QjcxGT4tavEp3w8nil56NqQzRz19P4D8QQp8PyDWJAP5sNrkAzQ7T+PkWBNoYOLMUX2TRfJFTATQ0vmhydj8RY6EqoEDjMP5ofl92y+g71vJj9/mdv7s9bS83SMp/vUvkdrD5dlU4uOSfaAWemtmz82Zg3UF+O95ZhEMBw3wc9TL74NrmGVbP07YeDJv8clhpJZJngXK+Qx8bYJnJal6NdIMFGeN6ptGVvIfuzEtDijO78k/SMaTBZAWQ8Jz4YgYg83tMQol767pbDVWmMc2H4lgienjIw+Py65MIGLWyxDn2USUwTfttBi9gda+K5O9ELrOaB3LCWXCOdPTztmyHH/n7ch4cW3DG7RVxl8kZMVIF71p/Q4pt6ki8BEaqvOYpMewOoZGoz9JcS1xyIDWQVdNAiVQcLaezxXCLDof6Xz9tLQTfXF835e+SYrFoZziHYGzUrN+jz4RThReFcbhoIoCiuz7nYSkTmjQtEexyGnDuO+SsmM7FAOn/DGLwAaC2AAv0QpGPs5XeTpRzqOD4TPjl3NNPy21hlDJQYKePuRE+eIHoALoMKFZNQrDWqPiWzzk6T4m4k6d9mh3foKv7sG+mIsYpaXS2zJdktKgowLzPLcIx3tZxdbYRGoWI/AvAJFxmm7bUzT7AoCjMcxdR6SIBThiGz4HLlXyZV86jtwHko8u3zk7qrh6Xo6A8TLPrJBKrlv/lgcfJD+yFh3qNwPHFZZQNzDuzkTWdGZtpYRN9BYvzyv5WanQYCFYhe6z6xFvcGCaqO8v/aoYDHPfn3gbnSOlKgie+rPDrh4YBeK7ZwVexAGnkLB8l6zPqBQaeifETgzheQ1IdCqhe3Q7gsgqmLph70NeNDqLskZ9ygjtj7iBxNCkiKmM7MW39EMk6DXxXPqZG9Kg28ewJslm2sHp5+kLSHWf/Wu5RaF+IcHWnFfg3sxl5vsFBndao2GIaIxxbMmIK3PQRgSbfj2FqBXL5rNFStsa+Osb6L2is3PDErhrA81uq9Yohm1CLgF477J6sZv9kDvyxfBW4nyHWL67dKc8/a4uC9Emn3Ho8+nfdGQa1esvqSb6SZIBbD4j+W+L/ekCfuDgD4qnY+CVlTaKa3CKIfxEk8rZFoZpG9uwOM99wsuui370TkarvIunlQOB9TNmHqcUxjm8uuTr3HLTFeQ3peW+hSFlluhCxFP4IrSlHOO1ypaMDPkLSpjGfTt82WIIEjltiFLE9U/oByHLgffomjsiI7AaWpWzb+zYebWDrw2QCZTyrGYy/se648o6zAK4V9ibQ+bBdWbwtIeDV578+oD7oZC9ULeDXlMWawXWymQ2qgeSTra+HN6UL/b+Mk7NsbFCdeDBn5rZvwo2OpgrBd6cjN0RTKk3Ol/Md8vjgdHoiTNDQwV870Sbp5Ltet4ePRv0LSQUvCV5Z1CQ2L5SKytk4c/jnzvnkht1Bx4+Kd9fH/3WzVgW4NTBCT1dz6T0US4pEWbD39hQewvx2ovu+P+le5AWQM4vhrFIdzrnOgwaBDLo6zGDkKtcMolT3Q+2WVM7mSZq1oIxefh+T41ZiEww+BGhr/JBAKjZ8lGPG38/76o/v5QCqLIH0I27yNFEtreVFJFDzKXYtkkRd+C2FJ2MMgmemAajlQBB/8FlLO/chzXuixNuOeEvFaddCJ6pTWP+E8W0TEf8YgckzS3ytiFnXqYcM/VMw/El+GYTD4xI0wujy98IotvnhMaYlTbmgB7ATpHiRbVy72cWx2Bbf8jGhlmLjn5HsNkZhz2kyPvasekrAq3uNzGt6i4jJ3g+uayqDuxUR5WGUp5YLyOH/bq6RCi/VFu0b82mZwK1cGpwujhLeKPNEo/HbGpIp1MIGPzpjgTvh/sFisTjl3hGmflNn2OBU/Y3r9PqY/OCB8D09QmNlj4cWC66DrKcnXo7lGlQTGS2xmVIMojn16ngPexsWHRlWAUYHYwniI4plsrAE4JOM6EfDGbMUb7/p6gdCzbmlApgwDCeYWrZ+I8sSiLQ6IcK86XDnDD82shdoO/pgMI5cgznTFiVVKoI28XOoVrSnYE5SncSVTEWc177G/EO2SSKapiM84mq2iSpN7zHUqBmDa3tOPpMjE1/hxvZ/MtfUbxmRgxcLTqeg+St8XrxebfUpx7GewnSDzgyxgqC3FEamO/mt+EBYyCjnXxmG4rktQz42MqYyiYI6ecymBUinxiEcM8GxjjABXNBCuEAypuFWpV28Wvzuy3cHYSOvzhPA5+ofUtP08A4MlHjkCruwNekRXKow7avwEEzO8+TM+2PYTXg+QjqFknV5xXXKoKXCLyjnpRGduHXbROBK5rOeDNU/3veWciH6DQAe38/W9Iu1FzgxiTPBmMUPreesTUfHVTFDAqIpNyMJKFGowCBdQV6aqHwtuVqgxGvHYIAgXlna1YCsOLKPllspQ1Zi246wIogfviOPrUInMU+QA+WtpZ+Dc9X7NuZCOI2lG1ylqBKHSEpd3clcKXvbmcYerd8dNzhBrOjCOxOVpAGraYOXQCckNnn8aBLUElpu+rYy5dCVjSoyX5lmqN3R0wXU5NNVLTnHrhaUIpWewmPQjcgs52eqQMQj3RWMRlRGPDdN2pAiXUZIn6GlQbMoCanBsqnbEJwdN3qDJgDSyY/N9Av3SevIQ99U2RrWDjfPVavF8XeoJVI+UB7tagh6XGkQVLhxd5dU2eROhIHrSj1OBJbCuGt60To3CFIrseJFUM/RKM/OIIzBBg3zV6uz1rihmsDkKCJbke0ttnGgKVCgVD5khhd6wpYA7qQR0mtz6JiBR90vKPwWyY5WdtfkO3YUVhd7G4nnmdXJhEc7t9n1JrPTFJINkPdjCBfOg4Ox9VVTdG+ZCQdb54/A8/57N+0rhd5MvjsZTI3V2gBuCAFgJ99JqP3y0vmA3QLdNJdcd36Mjb1KLx4pF3Tkm4YHjmoAJ4nZ82wlHqZ2CBuNIX0AJ/Tjk27xoqzQN+dzFCgdUIF6eXGT6AhEh0DHIR/UiEXDXDVaaERmDVMLGbanhBb28hYqJ8bcHWOPEJczBpQP4QEFUwAAGLxlIlrBTCIeXHF0DZNZWlXSYotQRqWUBrIOx24Eb1CP8YyHzd2TXXti0dHTc8iqzbtuQJuEh/Xh16BplzwaVbyb5PBz5KsegxLZJnTDSISkXKQRe02pYdw2fULKbcy3iZLC5ueHB+myDzb5eqo1KUeNgqhPwvAV7Ykvms/nVxm3j29SSHPt2zo1pL2r0MtQ30tJA8wEMeHwj8o8KtIy8onv5RGC88afyb7OfJETZ9kVSNHUkH5MOWp7nhpLLjqVT73C7XvnOMQyIeHbI/8m1CScSjgyV/skWrP+7MJuSUo8fkdnbppvy4ZTltwTXa2Unp8LeTPjmAhRUxWH1uvhmWByewV0lz3sk4ItjpPLQmVYOGaOC6HJaHzdvIvi/o3mFNh/Qmpoqwq3rjWDKxYJcdAQ6gH/eivWCqE6tXnbfktboHguSfipINUlskYxYGzMXRbsG1z5houTD9muN6kj82YX4E1/QWvvJK96oSmo5nFZy/0PpAEKXRQyxvxiM2H6+E3kxbv6yw5e2vIVxmax6wc0fiZIDK5zNRLhIBaNqJWlgusF3tCxV9RqPj4ar1toQSoimdv9LBAdtNqdY8W4m1IzRw9199K8KINWS4Yzm6DOnfFWwB8fbl+YdqLhWpT7xwekAQwylp5Lchce9BuuxblfV1bHew46+imAccepuTfViceMa5YSP/3sQwa4EK8F7+pYkrshp5X7hju6dYeRYVpGpUHsXMPyMOzV4MfIZqRJN4ZV4DoLSc/Cx84dUY3RnV3Xk0pf6eZGmYhoG5L38MdgQmrcTDcpDETwK+SORTpLOfaT2JrDQrWzrQnWwvJjGYC3yP8jkyppsZxfQXtnJjE5XA85r1Bjivtk0/s8vaKrCtqgdVxwJwQT8hMy8/EqUpmo4friO7zH94ptKnzHTpiJ2rHkEXwSO7AkB2/YuwOoaQ/KxWCcYTMWvRitm6/Eqj9U8yr/PXCBhVNNU3Wz4CJdntEOGDMWbzxlvk9hl67tBBu7hWfScAqSI2V+/5hMAIjwk1ULKwufXGNCh/cdoGhaW+xl+bWrtBJp7PwSHhAv37LCdPK2maPNL5khIitvofRJOKt7os+wPqiD9m6qtd4CgxD/JoBZrvLgoo/filA5/MeHLo8S/ku6gIMdFc20fLvPRPPRM0fp4fIVV0KSxwcNbdAjkE1DQUxcSjY+/zNlSp5iTvItxYSx1CGDchjTR3EYNCMDAx86Pb5unO3+Kp5YxMnWDtylfxUj66SMrj8LgeP/W7CgAAQNfmfVcslQo6K1xp7+1iXgtDXE2v0AjDYaQuoQFM65bzY/CcPdGenDOLg4sqO+hRe3TdyhGunnbMGNYG3CfEBaqdA1t+EVXNe2qDnPRfLDeqwWOmuHsZsoXPe1OzrQggvItPDSZ6yB5l2nfUauo6AKk+wpAy8cccwY8zYltnFP/70Xwny5nA7pbca3eO3VQsz1qV4utL2VbrFqKu6luFwkapB8YXeWrNlfdYCWcZkz+gw7xdyx7KVx09iz0NqadSu7PlQoZmU8g5DVEEXUMbNjDa/DFUtgxyfC004JgNED9rBsgz79wEE/9S6OSqKKfv3BBlmdXJA2shJZ05FnrbcWVU2PReogg9vaNCoN1CRldw2F8k4Zcn9jnkpI/XhC2EWlKKgwznz8lyiw9UplLMzoXtvcsQB4PBtsxhNBYGluOPWJpVsc0vlPLoi4rn045Goxs+PBJxGPO4uPuaI+QOuDMnAdV3Cfe+8BZHzTvAenOsbl+pyl4QqC63iQjNeMuOJBgDfgGaSDBZh49NXP3Rxq23zYkst2UfevfCU/+a75G2/NXsmm520WoezrN9E2ZC92pOUWIl+o++j1XSApfC3dXX7TYK2OFImR5lucwpi0iMv1Mc7147rTv6dahqgiYlhZWrxbSRhlRvTHsASFDj0wDyR/OEKIV6A0SY3d9eqJ6VPrCs/e+GeGGgWITKE32geX+IvsxJeEJDNw1Vhe7E0mGBaEa99jJnyIy48fDZCiyt9ZESH6Tswizok8VBsis+ZVg0joi8NTNEADwTe0YSvtdt1JOboTincai5et01L3dK35Ir/HLYeu1XiXE8zqByf2MKVzAXwrGELt4SB43X9hOgXUEgvlwsdMU/RZGxYvVqQ+X4L0uSiHUT5ZVQGv5iDmIMStQe+/yVHIHz0DrMTsMDG2j1AjVN6M3aksHIEyj0sWmLRsmE9jg1SKfwzG83KxuU2vUHOcQdQ8SSf/aIZWHg8zTft+CKsSucitQZV4wyMHDjdRisC11RQdy6AXc3roi0g0Tp805YWTO313Rc7u4mif+wUw/xUb1dzyG3znQ6uUyUanUd2Yr9zucncr4cIScpkIKt+dHARrR9xyxoytcdJencnZW73+/0+aw6rrF7F4RZsxIh/VL5QH1Zik5ihpTKt3CRIZwTKtZBpaIZVZG0MQYNDeQycz2kZfosF9GkMQ21tRebmw65O6zzbmdvITaRCbIoC2aYJnh8HTtV50Jv6MMiQgkj2pNeRx0Y3mwoMTLr13GpbhKpPK3q+wfDYoKMKIIcMN4TG4RkZegv51e8/9ynTRJwfzeJR2SSt7OP2byJ+y5gqMxC7CsM8wrpUx5wubajYXpsogMLoO4R03weG+Kb8KuCvkxb3s/Mn5xOdA4LUE5pE1jDt9LQyQK8HdmmdwWy/e/XpwMzUIDVOvwdKZXAm5/yQCTOWC6i1l26PD35nNGjQ06zQU4/U3cl7gXJEuWVkKHdfllkJJHrd9tFOnraMxzIOdsN40B7fZeZ9Fd1K4YGDdNt5nR7dhmGNXgOTL+s9j6zaJOBt+89I+o4Y1xJwd8iVhVUaqg3hX+x1Lod2lDL2q4hGXTyi78FXXOoEnziF6MhU5QTmXwIAbISXe8qSNp6ufKscqfnMRWs+jh+ZSO/rQfVGluwnecp1cxwQuJ3adWirHsaqXk/ov96VGH8rH54etk5iYd1gn3yjIrEKtfArvjl4vyMU/DGS9EfJXhUOafnII7YVnmZJG69aFXBOOYj/UfVUqDQIbPE64BQVr/ofgSwTJE0rRiHWWhdZGz88f9GT3kIgWjsKhATuSsRdBTu7ScxP7r5lDu1iR4FP3GRoGJLJhv83ehZfkjsiuBp0rR+PNsNST7FdE1i29Jaa92n/SZCyDYEJrjIkRz+KA40jws57w1YL09AQ0bNb01qiAf4dra5a6gElza5e+wUxyft/goLHjt8Vg45UcDGDyg17rOX5A7U8A2hbt4FiQMnyQTaVDtCb2TQiuCKZuiaP0VyRMwsqJp02677h2rMMcH/8wSW2V3nx0H4/YadWL3adG4dXhLDjdZGZpliV+zzHpp6Zybj+KZI30kcbw1GiybeWw46fT/BJhJcLwAnqSTUiYBDl6bz1O2EbAb5wJUxo0nCikNR3/YTgSZakPG/01TowZJE1b1YVTJZ6HhSi15qf2M7asbhONOMw2wTjq/Gcaf1S5E135m+fVbOo56+wm1u/mbuGhu0kfxbSf9vTuICG4EtE8J8ry6LIpGIVHSxNFcLvq/lJem14l8eweCX3l1OmnBbCiKm1Gv4Mjo6OZxLKGP0v0Ffgte7KMD8fePaEE9F7pFyiZ0WyvyR6QRAh0y2lj8Zq22w6RIfDD+wEGnw1NeCL11PLYUYLfjOMUQUOph3f+gvCVhpiQPOwQcO5tmHI3Lt/wMUTCRH8cMWXjtQfMKXnkCjtzZCeadpF+PKgfsXfrOE5hRnxI20SI0sw605HsLRNvNGWZ0K2DRtX0Hr3qQzqlGg9z6Q9R4CcPe4utc2eXS2jx5kzgs5I84ir5xDe7KTRe3thkJUyMtw1CwV375xu3Cnv6Hav0bZzIEuF0eZ8yd7DuGI5P0euMJgR0xYeaaXYZgy3LJ3FjPHmSTiZJRwITAO0ehw7uE8B99pC4/PfjiEl0cGgif7fUqWz3ws/30sVFMilPNIpAyXM9FEteRtXEQM4BOFgwP7a6sTEbMlKylK6cZTlP9lGEeOv/WaXu5fzjoNC7RbOmeIIGh3k4+V2WXceTPx2YCgMRv1YajROFl+5WXgDyv4Pu4sbMVQm1NzaI0WRInfOzYCnQSRj2xExyox1OSaoM8wk7qbAWavNJxQTy6obYGWxZiVbmaS9xOvJAERTu3ee14WJTEfGqX2rc+nGpuP65ByT27mHPIIFGfkSLZeIYa5bgMBJw86JwzrD7uxY7LTejLH93DgJH+BXJE9U+Yqh0I5wank9LZ5VrElHV4Bj1VjCsptdEmOM7n++yY5W5BClQtl/ZfgniFsY7hBF5GO+WBpBHP4X6H8FGEkZa6uuOCeMsuolnt0lSWmCWqxGUVvahlJ4z6fqLgR7nYxl3brF0rtNUkCnXrrssg06MiOgCy6Ac9GtGnWhHMbJST3tZYACD//UySJp3QoDwHOOsX+PWiVEMeMkuS+MjNwxWYe0k3OYjR/NjZFx93tzlF3c5x5hexvNokfSOUeR44RJTDTZFiRC+uIXGWhXDqnv7GOcJU+UTmFmOuFP/hpYUdBYm7ftyU5yWW46bNWI6Jg1WWSq1+ZDGDFBoseZ+c7fQuBwCD2A6XD+ZNZhcjKrYUsRpWA7ADwxofaUVnEbl+e+FnLvDAj2zHDzURKmfNa3SUFLDzXnXHEc0Z2fBNtXvD4ixypm4FiBrFhOPXmJkyAnNQ1jVoOp7yhklIBPn5WJ3emw1Lvto2O+tu370MIgNRtfRG2K8ThRPbje3FJ8fnrstsLVu0CyWXw/Sb2oajy8mZGz9z4y4Gj0pUx0H8LOxjh6B5TcgQXxw9Uy1AkgAmvn5+C3vdhqYsTa4TQYwCiLdpVq1LTIenu4QpCVSViNxfJTM+4WHPn2/YCurEnWI2V9WyU9BLKjdfQJ3N2kBxKwqqSV5jNEZzPKCJdy4dv7MznKqMohcFcfHDE6QNtwt+kz0ov/JOBcZMYbfWjBQanpoBt1ncYO9hzu82xg2ma2qP9vxqc6yGNBZFyYZf7RpO1UdEqXrn8Z/0vAU1HKKDSx4mc/8VtKE+MtzTOHIepOt7DqElU77jFQ8aLoAFx9eZ6ngjGmscHvxEcjLgU5Vo/IuVZ4ZDh+6LkBqneSgiNH+zNbWZTFfyZUhdMa0VO13PB0TkjLLdAU3rXMAW/TP3Q0BaTqL5dv4JSBUhmeZW1WsPHQbdma7eKnBXPkY6my25MhTd6OPptUQg9Pyt+Z0JZJdGy3q0kOCu/BBthkh7AuJ0VDFcVVJqVgfgqtXTKjachBjQdJcxANOgruXSgLmNyvfDxntW1yNMj0MJ/Tx0YzuonBVnSRKF8MsWt/WywrkD1+NROlfhXe0UNERPITpoy4oFr/E0NEetvfDaqrX0pt1E+fiY4VUt7/IPIf4nuWK0wR/rARUgGeqbv+9Kba8HBvYbUQzcJuizEN6C7SEf6/KrmlkOmEel8Zc5tAgyQihEpkI26wzQpq+9zXXPCaXAt2UU5zoI0a2XiQ+2jtwkynEsmwPlQagjMHUnBV2p5xzuK9E8xq8p23H+i5cbsc141cF08AI/FNLa83wRgvaZC4qlLNcct868XJwhybYTCP2F70zvKfQxLwRWixP6sGOSrjpjMbV7cMo+sq0sY/LqwOPlJiHc2CUkozrEUyb5xrD6Tk9DU+ZLIUT1kz1CYL+gtMWRJ8wx+BtoB6nUAZZOSt9yB7vEaGjlHK/n0jHiBQIzZ2t/iQFTyEJbj5BRYF2Ej9/X6Mx7hbJAosxpjIo4m2YuplxN/R2UoYu/ZQIrFsM92vTV+aU0ln8L0HBq6ka8aBJhyW9Z5w0ICY4DlwEnqptq62/e9qynpFNtGRgKjcTGPmGIXC38Vm+NBZz6UQaQLWbDk7pvouX7BlEBXqcQRGjrSVFhQIgFqqCkAUZ5fq1jQk6uzmM5OHyZyZjc1/kKurim+Hhp1XFF2C2Osv4dbbz/9hA4WAF5QIRWuXTfGjDxk6VjQt1hzkm36PDiuJ2PcMR6ufTMU8kBnULRXtucLLMWSW46KA/FvBi1BI0hw1Ntg4pgQwlYKPxBIG/IanGpSQJAe0myikRU70vU3RmqnuuF6EL/Wuy/KlCZsFgyLvfqb6QyiS6vhGZ4WbsnRhzKA+a3IrSknhRw9IUpjQdsazG5pOX3Fzh2wpIiD6jo9qJYEWlaTH7pbtddWFNdJke3sw8gcBbcw3xymFyT6YH9cAeSNUVv9fn0cy+FImDn1jOPXxqBrokpPQ5m/fvyMe8VeYkMSNWdmBl4t0+Wnv8GZHygWcO3idIJkNmJ6O+36xoh99/DDe+4x8321OOV2H1dnKOScxuuHOMVBfxT0QHMK17ln8Xtp2/z4oSZ55+lGwoY7ovQ1zdou/02PBV5lKrXHUODXkOnh9un1pAnNeRRCpa4pDGqZCPMZGLc103EqTxaojaXw45fwUjnFfP0e4SXdUvPczKlpHIwvUbKsFXZJs1wgseAF8wQcPbcr6EeUNbBS6jK5aR+HH2S4m97YiJcKb3trvvPNXuNrxnk7i2NWGY9EjWH/TwAcSlhZ2AHPBD0EJ9FtETghnsD+3WX1CbHCRrxMABNmSF3ExrYPtDth0e8aZZzY7oAn+pxGpSTuwP2U7vDsoxBrcx+ll3XcN1uCrnx1+Wfssya7091LiuoFnirkpE4lmzjfWXoKrtC45fVpbViOn8BJpdFCAc0Iw7nJjwb2KDby7wn0nIXktr0qou+L1Io4ggHcVjEug5WZy+Zkc9OARFDJUjD7pFUgjYN5t3mvvxuGrpCQV8nB4H3X7/WxeMrN9fBR7anndlxtzZ4NweGYPr1LobJD8HbhPas0TL40K7VWwZ7JEVWBJc1OQEMePB6RYWR/a0coM/IlBvYG3hiwiKjGery0iYv9lRZU5VgTomEcL6COFJJ0Rd4Jxqx4IKdI3xTUs1AOO2jh536s1pWgb5fUPl7RrNO+4l66YUQ92QqbStTJgH+gEVO7bnxf9aCJYJldStTelNw2uJYwlDOKCq2pRnU2u3yA96EXKhcVB9PG4d7X/isxJ/a7CPzKCXpzZGEmLcq9BN/EJarmBDFQfyl5jOGfVnMuYp5JIF54i/Pn3+AV3LFEv7UqHanzsa6e7nkCsQuFKwearIwlEtQ9mEzxj5y2pcbgEv+ztQ0GJL5uGD4ol4d2cHyqOqT7pB9Pbzv4rlCMoPn7Z2LpwDMk0YRmZ+IMIrPPt+iae1JDSkrSE10MATFZ+Kbi/bCa8g9LdzLrGA5cJDVtC8sd4y9XumaxnbswfZzpy28DfUFskQIi6LRHKReiHo3rNd64xWdVdZh4c8SgwLH9m7BeXb8U8dx7FRRbG3itEXSY/ReNulKY4KlFWYf53cSY31RwpgjhbEbzyWZmr/owrncb9yJZ6NBD4cWrSYiHF6SGk7peYFU2Yr0WZmgeR23DQbhRQmnBXNXYDgmeZNoBNYXGW1J1nzN9DemJKr2Y2AOE6k3qfNqiP79dsGgxEt+oabFsAigDKdtZabz/RCUn8Jhjf/0U3nwhbhy99oU3ro6bjs+YYwnroX/Q7bUQ5MlJjXeGNf4g7bhsmjfYrqcIseh9oP/J4eL17ewKN5OKKkmXMhTaLPZFe9QQ6k+He0nAtCqFsV+zCy1HBxfE5g2ZN+SOZLcOZo0dnH0SLvpLsMhaqpVKTd+qvKomDWFlh7By5ow4fcWjA5zWW/QyZQdX/O6dev8Vr6CRnjfMVOwX/ezOFn7JtYPZrz8iFWR8+ncd95S8MAs5Usl/E4zpnaS+0SQwIbJYPzJvfTl4YRaiWn5ZaaE2nDoYsqAhsi8jhatg1dgxcSJmquwH4BWDPP2VyM5JVCjwt7D1YwTEKHbkpoXm0nSdFxeCNMJsVA+NDPd2mQ6JGnXrWniNUJ1kCH3g1OPg+NH6KwZvITcPz8tNPRHTc0A6iBOZ8aUVKZpCsVLpUFG1xny6j5KP4qAbZk841Qr3xTrxUsM2QUMV44BTibD+RiyCIU/nG43eUg895jEwY0dPYCUkyf25TLCwKe5WQywb9LFZi5bq3zdUUZvR3NSlJQvYirFsIKVDGW3I8qo480eG4BYs3OTLXBg7/N5AEMequSEer0p4DmGFu6U2dFqTMzjQ+NkC73H5aN22z36WJuiTsf/udzlyfAjUYhEuQxTU5/WbEel/3oxDrWVuZ1yw/mCwDFnDGfjbwUP1o/7cMuafFLUMNE6Fmvj9hLOpQm/axF9jyxez+6zZcqbvewxkiK3tE0gPPzCZEQlZASbAnghSC2SNKP748Rpdw6lYjKMjPuWrR7nYEkAv588VjX9qiP/ERQVGsPpMLv3AF1W0xOeiGmncSj4xgSSoKDMwUPT5cF+gzSL/uoYbZOnZve8xJQNBtxHZIMn4lAXxgTklTf8O60kZ/t7CI5aLJBl45SeaxZYz14BIHDoFjaXchzBtlzT2sK5J1NU6T1GbBHZ03z+90i95S9wfgkAXu0AICHLg4CKqabhEEmkIbk27uvcYXdaXOW+z4XRqxsZ5FhKWM2nhnG2X3/vId5c1aBLhA8yyYFqaLv56/B5mJrpg3aN1uzMHgcCjwOuKvAozXC1nXjtErLxlAM203TPM2ITbGxTSmqESxWmMTE/9pjQDnxkj3xn0xtFUK/Bpbsmsd8sWwFL38Fh+pwTwwtMsTZegTWRx61N4t7/jl1GpNMztAgY08WPGYKZpwTg7hI/W17CrXJ3MkYN2yQryJBGZZB0KzUqUDjQfG2KXMmecx4XjtnrHcOG7IkEds175YUCG9T0/M2wrm4WSzgdTS9plG/XoX1QqufOKyWbogniqav46K9jsWJORYEQZzuWY41lxSGzaLPlK6N18cCUZjwUHUWG2XEZRrdB+YP9NUFEbz1pt9Mb7ew0QrOXSFKjSLWQ678aMrOYJndURbI38nx7KCNXmqh8ZKyyRNzRPJIc10U2E2S4Dk+3CFcMepvFs8CyOUkDKl4zveoj2+LjadWsF4yYlgYNwbePmh+aaghoYc7BITAIzxigsV6I+jnOltv7yazq20Qh7JR7pnCws3iSoSjb/vaJxVq2mbm//7facizQDRmBZ/w7Oxu50kJyY+VJj2CmvpjQZt5VTlScJ7HqRr4Zkp1o5GORdacBOYcfDohg9yv7A77o8H4NDp9CAWDff9H05p8WRSJ4xe9cu8Ftc2MXI/sA7hvM4S53qTuTraOA3cTuKsjh93nO/lG0pCQr1FM/QcvCq3Qx2yEEw08peSXjxvA8hFdWaN3j/FcW+TvxWfHlf1NZIuF4uBDZlnHeHDa27kAbuOR5P/60OzT7rbW56vTU0iKh5u/G1LsInvfTWpLNUYCrSvSX7f3u8oDZwdAqNObLLhiGp+rE9vMQNR8AX1Kvd0JTEeSLPjflgw7TbkR5WroRfQ7/p1oxbvo+H1mdKuEYxj0pFc+H98hSWtM4MoOTbY9fR1vGfiYoDcVmsjvKMEeQxfHtD9EaPDNeGhwcUXeBCvClZ7eCO/cHUHN/qegjccbjRA/t4D7iAerRsgb9dTUh3Hi6M9/bOTlVIOrSXcYBd1T3K8FVjgwKpUEPpbpZhcjcmkiEbk+pek9EHL9WGTIhKw9HXAPNAGac6iMiwvE2k71u41UnDLjp43l65ItMO17cdJjeAYo1Z5RVbhqWpjMP2DMcae8FmYx+1/ar8ef0ow/mniYtZ5VeX3UGpwCWfSTuE1HU7MAcqa243zb5s0sFkfhxJRGoDkHtUZ5FkGefIyHFnXVEp0pDH7JHU1XTfdVjju0dzFZoFss6he5BXMY5gLJgs7S7uPh6MYVjfehgUx2ddK5t8mbGvCVKHv7lL+XymDMt7ROpqY963J88T7/C/L6TsM88SwE2sAfwtfL7a50OaYgvUdi4E2+FDuoq8oQ/XFeo07mBFoTqLtBtiDU71/n0rQNFrolfIdKJh4v35Hqi+p8Om0IHOo2msSFxvlOdFg1/eNNghn1Okbq3JPiSOZ9cXEIPxiPguaLJWJa9ZodQsD8HWBjDg2rJhbcfloCxsNcC/nXJ+LstW+V7Lf2x+wbFzIPYqh4uu+EhtEqD6t+br9a/jp+OfHnyYZbFXrsBFutQGG4RquwEEdbvJsly4v+sqExTXIPdN/A5dumlRLu78IooyF+Y+LpIawIxHENuMVoGUNJNmWAoIudGasXNIKY4SLb5LHz7BSy0l55bP4SuhNSFps712K0RxLnFq0bRZMflBqKL64ZKYvdsDKvrmh2xRyO7WrwwH7lXOo9tNKnrWrDYOq69zpIxALg864ccCb6hihJ54511lEuSYe2+eExXtIhpOhg54GazFZUbltW8MsCPQfrNQEycuWGY0QW8/D2qde43J6S+4xokDxUyLQEDjvewOhXeJlbQQMhzdBeNIgKHYs9IKzKNyGRmdMVV3NV5Pt+tEX5GDQ0AK8PmDU+RBp7lF3OGBdt3NtvbQxQVG9jdcepfKE/saapt9dKhWL9EsDrX8l/bWzPBaZFBHxrk9r2BjDxGZfTdC4LujKBnfo9903uLn53i9rSx4jWlhL2PtIAYtuKwaEawhHlZ3S7n0hFmSX9GU26daVufkgLQpZnbUPYnF3putY9WGtl9xcaUYL9WLiTSNbyhpDeENurUY8UrHgkX3aQYZvJLnxIb11UsyBIlMaChRiNlMEgBSaC9WRN/BoZVOkm9DATnqeEpBGDPsTxHH/OZj5JnF8gBo0Pq0htB7NdAfOHQ9SsIlsUx9T73Ma9b29bpwfGZOH1tN13VQJCdBg0WT7RD+ZNr9cZf3b2qJrtblv3atdI7KXpTlMdZBPza3tbt0PbWsaLKiWMZUH3LX0esUiNbdVD7ikT50/MhDjXvjxpsLm/nNteoX0ck/KwMU4QJP9i/nLItCbghaEpPKuLY/s0hhZn0Hy8FxodI855ADISYE2FsDePj1vdDRp1AnWS1i0zRxQExtXTSeTTNU/F7e8ukyMNcD7NSP1iPj89UePplzLj/gAGybBDq07qdPfzjJ9p2zI7yYSVc9gAAO67qGTtAj3bMKFDv85CB9iX0Zd0/ESgyFFT4+w7t/jJenSe7M4nBxYGMIXAW0pl1AygsoGvwTGo/eSlTgr9aB7GeLYoxOHvVf2K9T8yls8JCD4WoJXlBQQJ1Mrr57sDDYVdlmaBD3aDp3EG7jdDWXVToHtWJpU3szTxHkwmMSZ8ZnEAFfgxwOj0ulDKL/FcHVqu3b87zFa6Na5eHPPp4xMjd+uWErv2DRFOxsTsOgTqM39Ck8s3oyz08OFQ0fUScm0smw1/nsIu8vAl+fz4gJ6bqCM71j+dy2cmUBHQ7bau7MWj/gzeUjvs3y/Ee1pwf54YRTl/+CY0ozl8ewg9zvnuuT85JH4yvcBy4veiZ9elOYZ/Vp3RJsyuXy+L0QFstV45tBuz93crZzDrDYO1ex9AlP2Y4pcyluyZ6jada3Vvn8rVOJ+4H1s2fEzed0K3ZC/Uoh0npYskOVITyjuVfNB2DPAsaPHQ0KOXOHaTc3HwNQar/TByXl2Oqq7THNjOTZFj80C8/Sj4nNVg/oFzoDNVN59iopiTQeL4OsINMV212hHRGuMwbK7g9fUG5DFg3gDKwnSerlBINP9eR5Ypwe/6ZBofRT35R88TEASfMwhfiYcCT8msoNI/ePZUgIHatkUbxu8X2+2I8qzveJAZNdQpKv06cHIQasheoxx3PuxfYMleITS4yAshxPBfqVgRljf7TanIoxMfd1TvQUEjozu9ZfB9BgZ2LHvqEmZPuaAZYT2cVplN5W6/HfS0GPuptqjKiNtpzPSzkLg5HHbHzuxL4HyAJemBgkYV2YnRXDHxJ6K9NKVMzg+jYA4YIdFQVAIpc1UEg/j7O4xrnIU3vqFANe903DsJrW58cIwz2+lsL0M4bh4Sz/LCKyBMZna/aU+m+U7l+QNhOhiq6WpeCwkRFqUK4O4B/wE9EyaGboJvufl9gFVpFrfOTKKBnP0w5qldXyx5Zh0h+liUq8vqCrLXiZDl1sTs/CiQ261a7fNszNiV+bge7PTUT+HhhCLfgOaa+rCC56GOFw4Sa8MAG7W4JiROyyUow8Ax4ing4uXKhewWiBqbbbHrPOOcdg216IeYD+lZylPnfXZiTiaO6PAMqwZ97XFuhUdd+igULFEHTxchA4TbKX79Orinr7n/5u8SwLXII+QCUQWznG/2OslhT2CYgv1c2AEkWo/bmGubNjYKtBjrLGR6rylvcAfjWlK4/XK7w6YsbKSvGObb98PWtVmGDpvJxMvIPlJ0u+bKpWGB7Nm75UHA2P4n7OxLB6DAGBrCOjYdKQGVHGaidZz3CoBuCNwkb549hGsokUNGDNgSF6uvlOf8r4DSG2Ly7PPU9yTxZtZSXbtcVG8HyMLYkLc62KvxX9YDaqaMNT5/NAc8PXiVkJypLsMVmIWYBxDzR68Y6uuyLLvkU6OXDfq0NYim91+5vTyfM52Azk9U+ueM/TIDwNbPE16e5rP3MWJyEAf87WTBlZR/cm8x6wE0CIlJ43jVt++Ke3KsiZ08qfd9EQNkx/1iPDKJmW1/X8PPvUfxG3aHjC/hGWjGERLQx2sVYsX1Md5rRq6glPuAy5p5BR445a0T9wgAnAjwhKS0ieIgKXOjo2WU3eK8FEmMvugIleDByEC6HvQk/kSRfDhp0AML8swlhDEBPwrK/s0XVS/gONY/6TIN/k/CViS3ED574Z3zLKhf+fmIbdpKA7SW563NLvg7J/Z4oDcF8XToKgPHsbONHKaD3ibdJ69tWQlgNHRTQOkPPzjwCg9B4Kggwx3DmNOXHxskYCEDxChCyKVDkQ6pwPeLjVCPoHFpxOKcMHZDbd+eTed3cwba9Nq9WCdnW5PLPXEmtX+iYlRiclRtDJKqsBbsUic9u0sCw5rzXe1d5YJiM3dxakbkFc9OtCwtzcTl1t3wdTRuPIBrSyicf9Ai9TVICucNjv3ldvtd7mWAEWJYbQXoW7rPUPQxhs36gP65gVOFaEHSAJkFzT6M0NXKmTQ6S2DPn2eTsCgwbfvR8YZ4TAAmrquWzJdMX/4LfGK5RFO2ZUelmrZcWzQyfe3wny9RhsIvKNx61hpQtH/Zx+iYH9bv1ST/Zx+PTE5+hIEiyU4oF+m2ORvLCCGdc+OFkITLBKUwC03Co3FvU340iqoshmA88aEWKLC2GUcyGk08FFmnQcbPO4EXv4jvWZ7HSCXcaGgt7RXVVHJWCFaYTyGHXc8/L6Au9ig9nyjeVwmCEchUpRm4riU1JvSOKyXQjg1vGC1HA3b4X3twLT4TPYmTWYoXwj6Ui4FQdbhOl4r/3NHB3lM5ji20f3ne6FnLRC3Tyv+8Wk4dP+fBhY4cEif943UEl/tuO9naJF+W1xuKae5Rx83qOS0CMr5lArtwpOx+UQAGAFnunKecFBYNCJmaOp8k8AEVB/MqLz3tedx1JpoGG3mxfxXGT70SAXbXsSWUQc56RG1lh9C9sZpmN9lKvkb5dCRzg3YlGLDat4qpVRAZdT+5luuoMf03vHk+M50dxV6lIwJH5Yc0KpTh5RBiYVjCVUVuO8CHB1m3r+XCSs6jEkOPb3YY8bxH8aPANh1fSijWhwdrncCh3gtcZPg8Rzt2kDfYT+lv2GG8mq2d3N9BMnv8VgQC6enFiOBWJCeijHHkUHHh2okKXhXLwWWo+dwFQ93XD9LNdvAGTtxA9Z6uxPUmsctlK2qokG5ARqsuqSxYhzzWy70zMAgbRs7CXGprMdQ0Vvd90uTEWK+excu/iHc2B9dgbXNboLmRCMw3zrZhgzl8V6HmJtsuTY581vJLO3Quqs8s4AmO8X8+fckqL9hfRVUeO7Q7QxXVoO6BqCikJuUyPzoEjeFimmeMv0hmidd2Ue0XnYcgaRm7ZW5qXtrSUXHNjS+vDzQ/PxcAp8XlfxXOM/5/k0i4AgIplMDhj0+5HcfLeCfrI1/yXS6s9t3QGfZeyK492y1Owxce4GzE6vQ9tJjqOL2OGPTNpaPRURSMcnzMJONm6mG8VkqcBaQ0fduJQOlR5KwX8lqwCXuDYSs+fHGZlbc5xIIONTqO52Lo6+bF9Q2PP+RQgSgAKe5kCQhHAETvVJ1zYTW+F54RdbPrwNPi86pw6cg9wEdNTj92KIN16ZMPpkHj6doYhvNUqQeKLiFXYHJPuIsXXnEn5SkVVxPRMnSLgmqTPIWSImZRRsKeP2v43vxNeMIbg08iEbml/oGi5bREbpn99Hl1dnHleknurlzKVdufUeBvBk9Kp5MRW3SavzXb6CYQd9BAiXl2hZ6NXdKw2iUlZFGkLLaY6ccE6S7J4QhWpIa1b6XX+yQym9c5h2B8IUTn9znTj7WZUkXIKvsnIx3rnIrYvDLYd+PORvROTXeYNCtGrppIP2GI7tus2YoT5q+Yk+ghjkZGwkuOkRV5f/uEdypx2PZu/oJns/C5MFrRGbNLI7Pz756KZj2b77T68K0iFyF0Ae4gGNIk24qaFRtd38V6xD++W9HZY7jndp1vN6ecU0WGTGjQ1bvQDslyNOzq2LYYHJU+q8w4HOPc7eklf+5S1dyyQeZbOxiYkDeeM4atn5oMsKXOa+clkpC3AUBCO1UIXY7jeEctSFYEzmakpAKDSbssD6/bs0QJMMznwexpKmnQZbR3YIv9FBY3I7hPQlprP2F+rpIHbypDVSHosT70tWO4SNWssuvr0HcFLKT6za8FMIvxTbbc9aHtIPI0UhDd7SbDbBg5EqI9hqvjXTAG8Q+qudqk99Zu2m8HT38TuQA7xgNU/W/HIy2asRdthoJ0ns62GVMkSgWGiaAlL3CIw1n19uAcDwVF0wMEC0PiRTEKaRBYHKzprFl8SKjBKv9UlTCzghN2DntqebtDYAbl5lKGZ9Yqk+d70Gy17BpI/phnbk+GhDr75y6NfNUJ4DeyAz2FCrC6+2wAERJHgfsZHWlYHhVweccbJjp0+R3vSfzL87YUjGaAzubvMf7A0+XbmMW7GpVbtTAPDjmms7s4Qr6FemaFWuuarfCpefvfWnFqLGKw6zfuSty+ladskDQ766vnzU9+MY4EZhpnT8MDWMEpCQTG9KNocNBHjMjzwCHsZ5owV48AdQNIG2BKs4MJQsloN6BSUrk7MgyAqgspmvGpjFvPT9reLtdIVJIS339MwPjrpQ9E2zUagd0SQe+gzob/8fZ/pRHqR4ZQ7qpCozeP0dddmTSovWK7yPQGJ4X/zeJfw3og902ffGeg9uGODWjqIIE1sDlXPg7Dqzh/6W1PhxedwR/3HoLvSE3NJAS8PJyfw7W9TDh5V9jK6Qg93Mvs7Yq9KEyPRrX7I7pD3sp7O59APgqDuBRjsSj7ddw/+ZV/zLJA+cuiFadCb2qIU33YT9CEwVDql6zi3RNeGleISmPKqx5t3kVPvAbP4WjCgHOtxcBxQBrFz7nMqhd0l42HFWt6pClF6DzHIHmubJr+ECYXUpa27NK+SruQWgCZJdGew78Ed9TnWHV2hOndV4dlst29/HVPT2LteWMV+7YpxUCxu7/RJR6M4SR+d0GHWD7hJM2xfHWBIh4RpKHU9b9ldWYt+iS8cpaDPH3VanXrU12PRTikDqMGX1/heq8InMkfuy1XfMbNO7FBAsW8z6O3gD7q1ojhcF53VqVG3mIYIhEUPJbaZ/F82aGxOjVrNFg6FllO+QI1FYzaQeRSmlpfP89erlBHRE32Vm9mAlyWX+9j2/Kqf1fh9zs0nRhJWRhxfe15kbnztDyh+uGRGk7w85lW0/KWUVRO9KEa3OrEs3xuRepCtBFiHXWx1uoPvg/L0+4HwMKG9BfnDueviAM8QV/QSzFearo9inkdCfzsms71WTip6WWtVaUiHprQpfa0NJVW4bQ9TaUyAIPAwkTTDI4eY9xDBLB/IZVcCmIwArUojfo7B3zlLlMclllch9Nc/VopBhRgyUkedGqsczONHSoC17tQeoIFfj4PszvxDaW1E8nkE+yJ+m7E9afe5DMpAJSjONuaekcVmZdk3qupvzF5diaZdH6y25jTrE6betaxaitOWjEzBXx7fhwAJDCR3APR25nX29q0FR2L3PXsBjMuqDxrol4pn00II9Vn8zNlwcmLoTtV+xjRD6wpNc5BkGfb0dP6SK2OcaV/agDcDsNMrUFo2hN2d1zRxfKZdigMJGuXEoK021hwNuulPNOIoqQkCgEXWft26UDqeYtc+oHV5kVIM7qfqewx9G89jUw1DlxiIFzz40JaCfHX5+HDqiwcnFg16tyBhbhwzw1CbGos2HGQag4f1YOnXjTUVXgBe0pF0AmxCnLfbiM3mUn89LllVr2kGrEQEAvKgA8zjl+FIRhMBM6A/sdl6cgJVkd/4eQ9VQs1443pBNkcZdUGNGFND0cvFJ53hJ/D28m03LMi765x18jlMqwBeGtdVMYvYVv30W27o8fq2L/dDwCjKW33o9zUJXlCS1MmbofCx4/AwYdrFzt2J+Kgj5hM0ZOiUdX5gWLV14YzCX+uXNSvjcZrsaWabw6bT34i5gIG908Ti2cc9fqPnjFNb3TugSHpZpAgb684afYPEJjVLOu7SZP9YMp0spn5bA07grMXTHKl0tR/Ed+G6gyqRAHcpNlWzenK9ZTHu7FSNuAuVWtfI/QzW4NEAWrmVgpnNqvPnaIotxsyOemsZETNGxx3YrmJQeLtNB1cft38O8OvzI9rbE23gtzYRcJEXNs1Zwnh9adve5A2J4tF8oKXxBEtavfjDNNbPe3l86Q9r0wyUldy/+4UnObx0hj9z78RmE3eGKUF/mNse+lW2nJ4SCwBPDWEpNlhAguqnktaEASuruEwr4pPqnRik7rMGaHgA55A3Sm0YwgSd9dK8IcyCTNWSBPOqfXeGrnZ9soXH6kfu5Jororrb/Au/jUulZEIY8wtb5Wj0FGqoMkM/ZWzIvtU546w7vIx49j83r4DCDQRdCUlQNre+9OB25Re0oPM4AnQpVBONpX/d+o/NLvWdRlpitcpXBF4wEcBGvvxwss2ZYybL22A5sUUTWhdcEhka2P4UhY2130TMkWhufUl4WpZZoSfdwCLC6JEGAMYBBwi+O4XMLxu2dR22Oxzg49VznaQniTklDQ4bjXexvgVfs5GbjSQK+bTopc3eLll054Y7BqUNuf4+He2vP+0SMkAYxATY+AFlM28kpexZFjlijw84Iqi3hbAPaAwt1gtJTS7nf/pwKc6kL9Sn8t52tqWCHICJAjSUhJiPJrJlQ41yOS0JZ7IUwPs+gpE3Lk5SE/pQwtEtJXTM+2vyVVn9AUXlHIgHNxbGhnbulwjNV3HCJIRLHHBiZOIPmLT5VvTv3OMiFi5qCBanrST+L7LH48J9jyinT/ARb0WSdAfQ3/+P4JZVSvokYkTUnOxVc/g+p8kFskvi9hqSlNK9sPQZez3PJjA1AT0NaQP24SOOfgA6FJiWR1Y9J8c9AnI5wjjLwitLW/kWWHTO/W+WiRzhElcZWB9di6bYyAkr7CuA/BM5C06EyM47mSwrEibhOMHJkrCQMal8GWrQzecdu9xS0hXH41ZGioljROF6E8AFY+Ly3cZGtcHMg9rn7wwf0oILJBm2ME4sGzMIqnzdJmTGkq40XNuORzNeOJvzmowVnvLM+ElE/HVW3zZ3CBT/Sy89gNTaJE8yx5yqArkvdViJd2Y8cKKPOjfoXjN7L8JYhMn9uLsklAP0CgwtJY8xN8rOatQ4VONHHjzSJtLhYF8Z23fhsxe8CkrhqyXnmnUYo3OVpME0ZuF/cmB6yb05t4bv62DDIEAV8h4zOv0l6OzR6iOVGAyh+cFu6aJ2z8E0awGTUJ1D/lODIQ/cHPJJedxSmJhJydkU0bb+HJNCH5cHSNtMlCM/lm1huw2NWPHXIJhzkqMLdOPec5QpmM7xAGzj/79+Yt5r16gXHWWC+e3QriZw/ZMvuvJuF5ai+CRmCXK9+JdQJ69vup9aPtzK/cDKoCvobcxHrbnzvEqBDlWG4Aa3unWHf2ZKEnAw+/x5N61BxCtm1x7drMHZM+JJGBy5W50jq+OZvVabXwpW3TbiloF+Ep9Pjdv2ubwo8Dz/CZnDlChH3MwS4Mdh+6lgCNqIK8F50JjZZAgNu+1t9+1CAilA/Q04Iqh7mscmdEgLDOy8xn8ycQanZ+s5ltZalLYeVHtd0/2VBQYG6Zs2mvNkPVog22GAyop2vM+Ly0oiJ82/ndSBn37LPebj6/hKg+9VP2c38Ivtt/9jjtpXiS5VeVQnPgL50z32s1L12E3ASXonq8DRNJZwN/7dEez8JfGUOshVYi95pCil21Rm6f/uc2TB7PUMDfHAoBiN54tydchr38T4ByzP5H2ZC1E2SxqQ+WNarHpIF7rhqgp1mLSMnCMfusOUl57lTst5vyUDS57nEXUwCk4AgOjejta47tMafvQY8JlXdOEL5nwVK5kcXgxkhVxQzeMRVQ3B35ht/7CUM2q9gtIR2gbOSElma7/dQxtn4vKsCm7V+25jKTyATzNL2sbTgNg7OKxpT5YIYGuvGhho+JZmwtpcDf6ByfJXq4j+UR6SUvQ5+21BLfGO0AlJij6QefZ6Smcd2s8jSJr2yDQJInhHWcrvEO3rp2J5Lhu9/ePptRwajpFPdFxxT7jkbGHxGgALnRW3Q9xOZoIEdcqYjW8lg0bpT4GnNTFxSFt7W6WQ7ljjRUVKX/1UfKhJISnJn+DKjkXjL3jXiJ5u7nXgnk/vu7Jm/9PA8zJ9jYbh/ajIy9cTnM0FxXlGTnyutJL6h967kvdGf1zpqT0U0DEB3soQJck70yNh5Yjh3GSJt3b64AYN1z9y1mamaJaQAn9R6LZLPHRdrcRIZatufUYd9LpDL7oDRQtePAhN4HYtPZSpUXqyLAUTR4wYSkM+R70sf2ooqlrB1vi1MrDSvMomU4/EPA4qmR2u2NqwTiyrxDaf0/lMfpLxZFV8QlM6Cxtmsg0wqAVnMdkeSsRcsXCnPEdGt/8FIflOXy5cd1L8zjbsA1V5X9tDo6iASIau1Bmj6KMR8XNhlKnfIx9m08ao2KK7oSBpJbfG7RQnqymp+ttf602o0oGhFqa7Im/hNx532qbvyAwV6RJqsjiIc0Z3vnuKdCr4GCDMsKgRgc/xfPNyMMEYJp0zXbxPl/tNdY93vuuuCZ0ZefNxYD/ctVRpbPJtwHYqxxbz4dxZ/sLoowjXgV4HlzyIo+B7pcvUt2ZdyASDiGfCnBTPWJqJlvFMZYcoECkkd10DrBQNzPRE1KV+DnKqub1/611b0V/mxDqk6ALkcL7HbhdsnBt9g3l8pVUInM99jUKBhB1uLwNCeIZuxllns3RBTTA4z5hxXTwIPt8GbELg2k02LS6h8WB2YGiU17lRHrftzB68V0F9+MhbyxZ3+uta4leHcF2DXuj+GmcMVcNhk6ipxFokm5x31QaJd+m8pfK6eo7bADKU1Lmr6dSS0YVWXbOSlSGlG9ATw91qfI4M8L6uTj/jbFT5H/Xb5jQjQtyyiAk7O/kE7SsLnKIMXusjpBXPm8SIyAxkR63aE+YoJ4JQWtlB1ft9vQ9zZqETCaX6cdgFCw+4LcO40m8m59zbKbuyihqqjup1TdQdfpOy6qrLcxn8javFKyU+qIxRwRA/DnRtxgPgmsD/w6DXEnGG5/uMwH8sDQdiUXgMCBQX8Z7Z5sAgz/EN7j9jaCvIvL2FZcc1utiHCE8vSfzLfMQA+VtxHA/dD3u2J8Y97rOTQ/TVOvdLESty5QKO6SKLBFk16tzD4o4Wmd4lhoArm9zClqNOEg4LA2DMAdSPgd9RK67Xyl3mqwzNUxr6WzEjbwfocOo3hcQCp9cbiW1zNpdzGA38Q==","reqSeq":"0116367150400100010000","result":{"code":"0000","message":"{clause_en-US=1100721, clause_zh-Hant=1100721}"},"rspSeq":"1513005","rspTime":"2021-11-12T11:04:01Z"},"mac":"LFcG1SHHhQyGvisQQ6+xO5W5WvXnCORbY4dfEz7tDvM="}
2021-11-12 19:04:01,389 INFO  [pool-3-thread-1][com.twca.twid.gw.api.mid.MidService] #1 fetch clause = zh-Hant/1100721
2021-11-12 19:04:01,390 INFO  [pool-3-thread-1][com.twca.twid.gw.api.mid.MidService] #1 fetch clause = en-US/1100721
2021-11-12 19:04:01,390 INFO  [pool-3-thread-1][com.twca.twid.gw.api.mid.MidService] #1 sync clause done, cost = 1390
2021-11-12 19:04:01,391 INFO  [pool-3-thread-1][com.twca.twid.gw.api.mid.MidService] #2 sync maintain start, local = []
2021-11-12 19:04:01,400 DEBUG [pool-3-thread-1][com.twca.twid.gw.api.mid.MidService] #2 sync maintain req = {"mac":"IqLMxNPeluRJuQYSgADI4xAar4ZWc7IYFh5c2hCX9MI","payload":"zwLOJl0872TRmFBzi740JQ","reqId":"8379424501","reqSeq":"0116367150413910020000","reqType":"maintain","sign":{"alg":"RS256","kid":"Az/LhZaQ4saOmXmKHU0zGqrm4uc=","sign":"g3pbVADIWCOtRxtXoX+raXFB2bLUbnxhl2YR+ZbkQVxTHcZUVSWEyBrro44h2MV8c5T/ip0NBS7LNTLAiMs8p974bmLxlS347Cb37AqK9sYu33vU9bqeofAEXMYrgELZ93sTgeFXQasm6uFjcXX9281F0ZTXklQ/YdicTlNFNUvIpFWM+jjtYXLGPnQeIIMC1jz2NFUYDqYMy9fhLN5J5Ha/RJzuRuEsUYI9nrkjl2lUllksWiCbecQWNIG4dL0rHEO/0pONwMKgrWS1W6jz0xh+aN00FYSMk6uvL59tKUbI3Ziqf4s1KdabaHv4dK3+ObuliLAMVa/dZWDT5FxxMg==","x5c":["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"]},"tinf":null,"ver":"1.0"}
2021-11-12 19:04:01,404 INFO  [pool-3-thread-1][com.twca.twid.gw.client.mid.MidClient] #2 post to https://midtest.twca.com.tw/midServer/v1/maintain.json, reqId=8379424501, reqSeq=0116367150413910020000, reqType=maintain
2021-11-12 19:04:01,427 INFO  [pool-4-thread-2][com.twca.twid.gw.client.mid.MidClient] # reqSeq = 0116367150413910020000, wait = 0, cost = 22
2021-11-12 19:04:01,428 INFO  [pool-3-thread-1][com.twca.twid.gw.client.mid.MidClient] #2 recv resp.headers[x-twid-rspseq] = 1513009
2021-11-12 19:04:01,429 DEBUG [pool-3-thread-1][com.twca.twid.gw.api.mid.MidService] #2 sync maintain rsp = {"ver":"1.0","response":{"code":"0000","message":"0","payload":"Fha0Y2dcuiNZEtYbJW7aIA==","reqSeq":"0116367150413910020000","result":{"code":"0000","message":"0"},"rspSeq":"1513009","rspTime":"2021-11-12T11:04:01Z"},"mac":"Fb0aViwbgqTuH+7L6dtNcXQ74pJFKhTZ3vHc5xpjUnM="}
2021-11-12 19:04:01,451 INFO  [pool-3-thread-1][com.twca.twid.gw.api.mid.MidService] #2 fetch maintain = []
2021-11-12 19:04:01,452 INFO  [pool-3-thread-1][com.twca.twid.gw.api.mid.MidService] #2 sync maintain done, cost = 61
